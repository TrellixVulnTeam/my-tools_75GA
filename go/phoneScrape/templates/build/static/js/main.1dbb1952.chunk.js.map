{"version":3,"sources":["components/charts/reactChart.js","components/domain-card.js","components/actions/api.js","components/fofTable.js","views/fof.view.js","views/status.view.js","views/manualCrawl.view.js","views/facilityAutoComplete.js","dash/dashboard/tools/toolbox.js","dash/dashboard/api/api.js","dash/dashboard/tools/facilityAutoComplete.js","dash/dashboard/tools/skuFilter.js","dash/dashboard/sidebar/Sidebar.js","dash/dashboard/tools/table.js","dash/dashboard/tools/Card/Card.js","dash/assets/material-dashboard-react.jsx","dash/dashboard/tools/Card/CardHeader.js","dash/dashboard/tools/Card/CardBody.js","dash/dashboard/components/Conversion/nivoPie.js","dash/dashboard/components/Conversion/lineChart.js","dash/dashboard/components/Conversion/Conversion.js","dash/dashboard/components/Conversion/ConversionPath.js","dash/dashboard/components/Export/exportsTable.js","dash/dashboard/components/Export/Export.js","dash/dashboard/components/Settings/Settings.js","dash/dashboard/components/Explorer/Builder.js","dash/dashboard/components/Explorer/Stalker.js","dash/dashboard/components/Explorer/Explorer.js","dash/dashboard/tools/DateComponent.js","dash/dashboard/components/Touch/Touch.js","dash/dashboard/components/Timeframe/lineChart.js","dash/dashboard/components/Timeframe/Timeframe.js","dash/dashboard/Dash.js","dash/login/AuthService.js","dash/login/Login.js","dash/App.js","App.js","index.js","dash/assets/logo/yak-logo-fullbody.svg"],"names":["ReactChart","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","today","Date","tempLabels","i","chartData","length","setDate","getDate","unshift","getUTCMonth","state","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","chartData404","chartOptions","responsive","scales","xAxes","time","unit","displayFormats","quarter","distribution","yAxes","ticks","beginAtZero","inherits","createClass","key","value","react_default","a","createElement","className","es","options","Component","cardStyle","border","errStyle","ulStyle","textAlign","listStyleType","margin","padding","DomainCard","apply","arguments","style","statusCode","href","domain","target","statusInfo","FacilityName","ctAllIcons","ctTableFullWidth","ctTableResponsive","ctTableUpgrade","reactChart","GraphDataOutage","GraphData404","stats","hidden","Status","AvgResponse","toFixed","color","Outages","Errors","statusURL","monthlyStatusURL","fofURL","crawlURL","document","location","host","api","crawl","startCrawl","domainToCrawl","userEmail","crawlType","formData","FormData","set","axios","post","headers","Content-Type","then","resp","catch","console","log","facility","getFacilityList","get","err","fof","get404List","status","getStatusInfo","getMonthlyStatusInfo","FofTable","component","keys","map","keyName","keyIndex","Page","String","Referer","moment","TimeStamp","format","FofView","retrieve","setState","fofList","selected","includes","fofTable","TabContainer","Typography_default","children","StatusView","domainObj","monthlyDomainObj","handleChange","event","showMonthly","lastUpdate","_this$state","Tabs_default","onChange","centered","Tabs","Link","to","domain_card","isSelected","statsIcon","id","fof_view","ManualCrawl","crawlDomain","email","cType","replace","alert","indexOf","updateDomain","val","updateUserEmail","handleSelect","_this2","noValidate","autoComplete","FormControl_default","InputLabel_default","htmlFor","Select_default","width","e","inputProps","name","MenuItem_default","TextField_default","required","defaultValue","userAgent","Button_default","variant","onClick","suggestions","FacilityAutoComplete","savedFacilities","localStorage","getItem","inputValue","selectedItem","split","handleKeyDown","keycode","slice","onUpdate","setItem","handleInputChange","item","toConsumableArray","concat","handleDelete","splice","url","push","type","FacilityType","_this$state2","downshift_esm","_ref2","getInputProps","getItemProps","isOpen","inputValue2","selectedItem2","highlightedIndex","InputProps","ref","other","objectWithoutProperties","material_ui_TextField_default","assign","objectSpread","inputRef","classes","root","renderInput","fullWidth","startAdornment","Chip_default","tabIndex","onDelete","onKeyDown","placeholder","Paper_default","square","count","filter","suggestion","keep","toLowerCase","getSuggestions","index","_ref","itemProps","isHighlighted","Menu","fontWeight","renderSuggestion","React","toolbox","storePak","input","stringYakPak","JSON","stringify","window","retrievePak","parse","SelectedFacility","DateFrame","From","add","To","CompareFrom","CompareTo","Filter","conversion","touch","rollup","channel","source","campaign","tier","medium","disorder","network","targetingMethod","message","ageRange","ethnicity","familyRole","gender","income","interestsBehaviors","language","education","occupation","relationship","religion","Touch","tabValue","Conversion","Explorer","Storyboard","searchMetric","storyPivot","Builder","Columns","Timeframe","api_api","security","authenticateLogin","user","pass","pushYakPak","yakPak","toString","core_Chip_default","core_Paper_default","SKUFilter","currentFilter","rightDrawer","right","toggleDrawer","side","defineProperty","dummyObj","clearFilters","cleanFilter","Tooltip_default","title","placement","top","material_icons_react_default","icon","size","Drawer_default","anchor","open","onClose","display","position","bottom","left","reload","paddingTop","height","overflowY","role","multiple","marginBottom","Sidebar","toggleHidden","subConversion","subTimeframe","src","logo","alt","paddingLeft","Tooltip_Tooltip_default","cursor","verticalAlign","skuFilter","CustomTable","esm_extends","tableHead","tableData","tableHeaderColor","tableResponsive","Table_default","table","undefined","TableHead_default","TableRow_default","prop","TableCell_default","tableCell","tableHeadCell","TableBody_default","defaultProps","withStyles","tableStyle","card","marginTop","borderRadius","background","boxShadow","flexDirection","wordWrap","fontSize","cardPlain","cardProfile","cardChart","& p","_classNames","plain","profile","chart","rest","cardClasses","classNames","primeCardHeader","mintCardHeader","warningCardHeader","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","roseCardHeader","borderTop","fontFamily","lineHeight","textDecoration","minHeight","& small","cardHeaderStyle","& a","cardHeader","borderBottom","zIndex","&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$primeCardHeader,&$mintCardHeader,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader","&:first-child","&$primeCardHeader,&$mintCardHeader,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader","&:not($cardHeaderIcon)","&$cardHeaderStats svg","&$cardHeaderStats i","&$cardHeaderStats$cardHeaderIcon","cardHeaderPlain","marginLeft","marginRight","cardHeaderStats","& $cardHeaderIcon","& h1,& h2,& h3,& h4,& h5,& h6","cardHeaderIcon","&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader","& i","& svg","cardHeaderClasses","cardBody","flex","WebkitBoxFlex","cardBodyPlain","paddingRight","cardBodyProfile","cardBodyClasses","NivoPie","nivoData","propsColor","Card_Card","Card_CardHeader","Card_CardBody","nivo_es","innerRadius","padAngle","cornerRadius","colors","colorBy","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","animate","motionStiffness","motionDamping","legends","direction","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","effects","on","LineChart","calculateDateRange","compareToDate","compareStartDay","compareNumbDays","diff","temp","populateData","dateLabels","tempObj","j","x","y","Math","floor","random","pointLabel","dummyOptions","convertToDay","convertToWeek","toDate","startDay","numbWeeks","convertToMonth","numbMonths","numbDays","primaryLabels","fill","stack","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","lineTension","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","tooltips","titleFontSize","titleSpacing","callbacks","tooltipItem","datasetIndex","yLabel","scaleLabel","xName","labelString","stacked","yName","paddingBottom","float","Button_Button_default","disabled","core_Typography_default","handleTabChange","updateDash","parentState","core_Tabs_default","indicatorColor","textColor","Tab_default","Conversion_TabContainer","nivoPie_NivoPie","chartCallData","cardConversionTable","lineChart","dataLabel","cardCategoryWhite","&,& a,& a:hover,& a:focus","& a,& a:hover,& a:focus","cardTitleWhite","cardConversionGraph","overflowX","ConversionPath","timeToShow","subtract","topPieData","topPieOptions","text","botPieData","botPieOptions","timeFrameToShow","Export","exportName","exportEmail","recurrence","columns","multiline","disorderDetail","targeting","notes","priority","trigger","CardContent_default","container","formControl","textField","autoWidth","FormControlLabel_default","control","Switch_default","checked","checkedB","CardActions_default","exportsTable","minWidth","pos","Settings","handleColumnSelect","Rows","rows","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","FormControl_FormControl_default","InputLabel_InputLabel_default","Select_Select_default","MenuItem_MenuItem_default","col","row","Stalker","match","params","TextField_TextField_default","Grid_default","xs","md","List_default","ListItem_default","ListItemText_default","primary","secondary","withRouter","updateDashBuilder","Explorer_TabContainer","Explorer_Stalker","Builder_Builder","DateComponent","dateDenomination","updateToDate","dateFrame","updateFromDate","updateCompareToDate","updateCompareFromDate","handleDateDenominationSelect","tempTo","tempFrom","dateDenom","endOf","startOf","clearDates","handleClickOpen","handleClose","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","FormGroup_default","InputLabelProps","shrink","DialogActions_default","refreshView","Touch_TabContainer","handleHistoryChange","tempChartD","yAxisID","showHistory","weight","Timeframe_lineChart","savedState","Dash","updateSelectedFacility","updateSKUFilter","updateDate","updateDashConversion","updateDashTimeframe","updateDashStoryboard","updateDashExplorer","onbeforeunload","isAuthenticated","tools_facilityAutoComplete","tools_DateComponent","sidebar_Sidebar","Route","path","render","components_Touch_Touch","exact","components_Conversion_Conversion","Conversion_ConversionPath","components_Explorer_Explorer","components_Export_Export","Settings_Settings","components_Timeframe_Timeframe","AuthService","setToken","idToken","getToken","logout","removeItem","_checkStatus","response","error","Error","statusText","fetch","bind","login","getProfile","username","password","method","body","res","token","Promise","resolve","isTokenExpired","exp","now","Accept","loggedIn","json","Login","assertThisInitialized","handleFormSubmit","Auth","history","CardContent_CardContent_default","CardActions_CardActions_default","onSubmit","preventDefault","DashApp","verifyLogin","hash","dashboard_Dash","dash_login_Login","App","SelectedFacilities","selectedUpdate","baseUrl","process","manualCrawl_view","facilityAutoComplete","status_view","src_dash_App","ReactDOM","HashRouter","src_App","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.1dbb1952.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {Line} from 'react-chartjs-2';\n\nexport class ReactChart extends Component {\n    constructor(props){\n        super(props);\n        let today = new Date();\n\n        let tempLabels = [];\n\n        // Generate date labels starting today and iterating back through length of data\n        for (let i = 0; i < this.props.chartData.length; i++) {\n            // parse date for how many days prior\n            today.setDate(today.getDate()-i);\n            tempLabels.unshift((today.getUTCMonth()+1) +\"/\"+ today.getDate());\n\n            // reset date back to current date\n            today = new Date();\n        }\n\n        this.state = {\n            chartData: {\n                labels: tempLabels,\n                datasets: [\n                    {\n                    label: \"Outages\",\n                    backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                        // 'rgba(54, 162, 235, 0.2)',\n                        // 'rgba(255, 206, 86, 0.2)',\n                        // 'rgba(75, 192, 192, 0.2)',\n                        // 'rgba(153, 102, 255, 0.2)',\n                        // 'rgba(255, 159, 64, 0.2)'\n                    borderColor: 'rgba(255,99,132,1)',\n                        // 'rgba(54, 162, 235, 1)',\n                        // 'rgba(255, 206, 86, 1)',\n                        // 'rgba(75, 192, 192, 1)',\n                        // 'rgba(153, 102, 255, 1)',\n                        // 'rgba(255, 159, 64, 1)'\n                    borderWidth: 2,\n                    hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n                    hoverBorderColor: \"rgba(255,99,132,1)\",\n                    data: this.props.chartData,  // chart data comes from props in domain-card\n                    },\n                    {\n                        label: \"404\",\n                        backgroundColor: 'rgba(255, 103, 0, 0.2)',\n                        borderColor: 'rgba(255, 103, 0, 1)',\n                        borderWidth: 2,\n                        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n                        hoverBorderColor: \"rgba(255,99,132,1)\",\n                        data: this.props.chartData404,  // 404 chart data comes from props in domain-card\n                    },\n                ]\n            },\n            chartOptions: {\n                responsive: true,\n                scales: {\n                    xAxes: [{\n                        time: {\n                            unit: 'day',\n                            displayFormats: {\n                                quarter: 'MMM D'\n                            }\n                        },\n                        distribution: 'series'\n                    }],\n                    yAxes: [{\n                        ticks: {\n                            beginAtZero: true,\n                        }\n                    }]\n                }\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"reactChart\">\n                <Line\n                    data={this.state.chartData}\n                    options={this.state.chartOptions}\n                />\n            </div>\n        );\n    }\n}\n\nexport default ReactChart;","import React, {Component} from \"react\";\nimport ReactChart from './charts/reactChart';\n\nconst cardStyle = {\n    border: '3px solid #00C853'\n};\n\nconst errStyle = {\n    border: '3px solid #D50000'\n};\n\nconst ulStyle = {\n    textAlign: \"left\",\n    listStyleType: \"none\",\n    margin: 0,\n    padding: \"0 0 0 8px\"\n};\n\nexport class DomainCard extends Component {\n    render() {\n        return (\n            <div className=\"domainCard card\" style={this.props.statusCode > 399 ? errStyle : cardStyle}>\n                <div className=\"header\">\n                    <h4 className=\"title\">\n                        <a href={\"http://\" + this.props.domain} target={\"_blank\"}>\n                            {this.props.statusInfo.FacilityName !== \"\" ?\n                                this.props.statusInfo.FacilityName : this.props.domain}\n                        </a>\n                    </h4>\n                </div>\n                <div className={\n                    \"content\" +\n                    (this.props.ctAllIcons ? \" all-icons\" : \"\") +\n                    (this.props.ctTableFullWidth ? \" table-full-width\" : \"\") +\n                    (this.props.ctTableResponsive ? \" table-responsive\" : \"\") +\n                    (this.props.ctTableUpgrade ? \" table-upgrade\" : \"\")\n                }\n                >\n\n                    <ReactChart chartData={this.props.statusInfo.GraphDataOutage} chartData404={this.props.statusInfo.GraphData404}/>\n\n                    <div className=\"footer\">\n                        {this.props.stats != null ? <hr/> : \"\"}\n                        <div className=\"stats\">\n                            <ul style={ulStyle}>\n                                <li hidden={this.props.statusCode === 200}>\n                                    <b>Status:</b> {this.props.statusInfo.Status}\n                                </li>\n                                <li>\n                                    <b>Response Time:</b> {this.props.statusInfo.AvgResponse.toFixed(2)}<i>ms</i>\n                                </li>\n                                <li>\n                                    <b>\n                                        <span style={{color: \"#e83e8c\"}}>Outages: </span>\n                                    </b>\n                                    {this.props.statusInfo.Outages}\n                                </li>\n                                <li>\n                                    <b>\n                                        <span style={{color: \"#ff6700\"}}>404: </span>\n                                    </b>\n                                    {this.props.statusInfo.Errors}\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DomainCard;","import axios from \"axios\";  // request library\n\n// url for monitor status info endpoint\nlet statusURL = \"http://go-monitor.us-east-1.elasticbeanstalk.com/api/monitorstatus\";\n//let statusURL = \"http://localhost:5555/api/monitorstatus\";\nlet monthlyStatusURL = \"http://go-monitor.us-east-1.elasticbeanstalk.com/api/monthlymonitorstatus\";\nlet fofURL = \"http://go-monitor.us-east-1.elasticbeanstalk.com/api/404list\";\nlet facilityListURL = \"http://go-monitor.us-east-1.elasticbeanstalk.com/api/getFacilities\";\nlet crawlURL = \"http://go-monitor.us-east-1.elasticbeanstalk.com/api/runCrawl\";\n\n// Check if we need to convert to relative url because basic auth\nif (document.location.host === \"monitor.acadiadevelopment.com\") {\n    statusURL = \"http://\" + document.location.host + \"/api/monitorstatus\";\n    monthlyStatusURL = \"http://\" + document.location.host + \"/api/monthlymonitorstatus\";\n    fofURL = \"http://\" + document.location.host + \"/api/404list\";\n    crawlURL = \"http://\" + document.location.host + \"/api/runCrawl\";\n}\n\n\nexport default {\n    crawl: {\n        startCrawl: (domainToCrawl, userEmail, crawlType) => {\n            // Set form data variable\n            let formData = new FormData();\n            formData.set('domain', domainToCrawl);\n            formData.set('email', userEmail);\n            formData.set('crawlType', crawlType);\n\n            return axios.post(crawlURL, formData, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\"\n                },\n            })\n                .then((resp) => {\n                    return resp.data;\n                })\n                .catch((resp) => {\n                    //handle error\n                    console.log(resp);\n                });\n        }\n    },\n    facility: {\n        getFacilityList: () => {\n            return axios.get(facilityListURL).then((resp) => {\n                return resp.data;\n            })\n                .catch(function (err) {\n                    console.log(\"GET Facility List ERR: \", err);\n                })\n        }\n    },\n    fof: {\n        get404List: () => {\n            return axios.get(fofURL).then((resp) => {\n                return resp.data;\n            })\n                .catch(function (err) {\n                    console.log(\"GET 404 ERR: \", err);\n                })\n        }\n    },\n    status: {\n        getStatusInfo: () => {\n            return axios.get(statusURL).then((resp) => {\n                return resp.data;\n            })\n                .catch(function (err) {\n                    console.log(\"GET Status ERR: \", err);\n                })\n        },\n        getMonthlyStatusInfo: () => {\n            return axios.get(monthlyStatusURL).then((resp) => {\n                return resp.data;\n            })\n                .catch(function (err) {\n                    console.log(\"GET MonthlyStatus ERR: \", err);\n                })\n        }\n    },\n}\n","import React from 'react';\nimport moment from 'moment';\n\n\nfunction FofTable(props) {\n    return (\n        <div className=\"fof\">\n            <h4>\n                {props.facility}\n            </h4>\n            <table className=\"fofTable\">\n                <thead>\n                <tr>\n                    <th component=\"th\"></th>\n                    <td>404 Link</td>\n                    <td>Referred From / Found On</td>\n                    <td>Time</td>\n                </tr>\n                </thead>\n                <tbody>\n                {Object.keys(props.data).map((keyName, keyIndex) => {\n                    return (\n                        <tr key={keyName}>\n                            <th>{keyName}</th>\n                            <td>\n                                <a href={props.data[keyIndex].Page.String} target={\"_blank\"}>\n                                    {props.data[keyIndex].Page.String}\n                                </a>\n                            </td>\n                            <td>\n                                <a href={props.data[keyIndex].Referer.String} target={\"_blank\"}>\n                                    {props.data[keyIndex].Referer.String}\n                                </a>\n                            </td>\n                            <td>{moment(props.data[keyIndex].TimeStamp).format(\"lll\")}</td>\n                        </tr>\n                    );\n                })}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default FofTable;\n","import React, {Component} from 'react';\nimport FofTable from '../components/fofTable';\nimport api from '../components/actions/api';\n\n\nclass FofView extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fofList: {},\n        };\n\n        // Initiate request on startup\n        this.retrieve();\n    }\n\n    retrieve = () => {\n        // Request for 404's\n        api.fof.get404List().then(resp => {\n            this.setState({\n                fofList: resp\n            });\n        });\n    };\n\n    render() {\n        let selected = this.props.selected;\n        let fof = this.state.fofList;\n\n        if (this.props.selected.length > 0) {\n            return (\n                <div className=\"content\">\n                    <h3>404's</h3>\n                    {fof ? (Object.keys(fof).map((keyName, keyIndex) => {\n                        if (selected.includes(fof[keyName][0].FacilityName.String)) {\n                            // Use keyName to get current key's name, domainObj[keyName] to get value\n                            return (<FofTable\n                                facility={fof[keyName][0].FacilityName.String}\n                                domain={keyName}\n                                key={keyIndex}\n                                data={fof[keyName]}\n                            />);\n                        }\n                    })) : (<p> Could Not Get Data </p>)\n                    }\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"content\">\n                    <h3>404's</h3>\n                    {fof ? (Object.keys(fof).map((keyName, keyIndex) => {\n                        // Use keyName to get current key's name, domainObj[keyName] to get value\n                        return (<FofTable\n                            facility={fof[keyName][0].FacilityName.String}\n                            domain={keyName}\n                            key={keyIndex}\n                            data={fof[keyName]}\n                        />);\n                    })) : (<p> Could Not Get Data </p>)\n                    }\n                </div>\n            );\n        }\n    }\n}\n\nexport default FofView;","import React, {Component} from 'react';\nimport DomainCard from '../components/domain-card';\nimport api from '../components/actions/api';\nimport Tabs, {Tab} from 'material-ui/Tabs';\nimport Typography from 'material-ui/Typography';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport FofView from \"./fof.view\";\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{padding: 8 * 3}}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass StatusView extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            domainObj: {},\n            monthlyDomainObj: {},\n            showMonthly: false,\n            lastUpdate: \" \",\n            value: 0\n        };\n        // get status data obj on startup\n        this.retrieve();\n    }\n\n\n    // Get status data from monitor endpoint\n    retrieve = () => {\n        // Get weekly status\n        api.status.getStatusInfo().then(resp => {\n            // console.log(resp);\n            this.setState({\n                domainObj: resp,\n            });\n        });\n\n        // Get monthly status\n        api.status.getMonthlyStatusInfo().then(resp => {\n            this.setState({\n                monthlyDomainObj: resp\n            });\n        });\n    };\n\n    // Updates tabs\n    handleChange = (event, value) => {\n        this.setState({value});\n    };\n\n    render() {\n        const selected = this.props.selected;\n        const {value, domainObj, monthlyDomainObj} = this.state;\n\n        if (selected.length > 0) {\n            return (\n                <div className=\"content\">\n                    <h3>Site Status</h3>\n                    <Tabs value={value} onChange={this.handleChange} centered>\n                        <Tab label=\"Weekly\"/>\n                        <Tab label=\"Monthly\"/>\n                        <Tab label=\"404 List\"/>\n                        <Link to=\"/manual_crawl\">\n                            <Tab label=\"Start Crawl\"/>\n                        </Link>\n                    </Tabs>\n                    {value === 0 && <TabContainer>\n                        {domainObj ? (Object.keys(domainObj).map((keyName, keyIndex) => {\n                            // check if facility name is in the selected list before it gets rendered\n                            if (selected.includes(domainObj[keyName].FacilityName)) {\n                                // Use keyName to get current key's name, domainObj[keyName] to get value\n                                return (<DomainCard\n                                    isSelected={true}\n                                    statsIcon=\"fa fa-history\"\n                                    key={keyIndex}\n                                    statusCode={domainObj[keyName].Status}\n                                    statusInfo={domainObj[keyName]}\n                                    id={keyName}\n                                    domain={keyName}\n                                />);\n                            }\n                        })) : (<p> Could Not Get Data </p>)\n                        }\n                    </TabContainer>}\n                    {value === 1 && <TabContainer>\n                        {monthlyDomainObj ? (Object.keys(monthlyDomainObj).map((keyName, keyIndex) => {\n                            // check if facility name is in the selected list before it gets rendered\n                            if (selected.includes(monthlyDomainObj[keyName].FacilityName)) {\n                                // Use keyName to get current key's name, domainObj[keyName] to get value\n                                return (<DomainCard\n                                    isSelected={true}\n                                    statsIcon=\"fa fa-history\"\n                                    key={keyIndex}\n                                    statusCode={monthlyDomainObj[keyName].Status}\n                                    statusInfo={monthlyDomainObj[keyName]}\n                                    id={keyName}\n                                    domain={keyName}\n                                />);\n                            }\n                        })) : (<p> Could Not Get Data </p>)\n                        }\n                    </TabContainer>}\n                    {value === 2 && <TabContainer>\n                        <FofView selected={selected}/>\n                    </TabContainer>}\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"content\">\n                    <h3>Site Status</h3>\n                    <Tabs value={value} onChange={this.handleChange} centered>\n                        <Tab label=\"Weekly\"/>\n                        <Tab label=\"Monthly\"/>\n                        <Tab label=\"404 List\"/>\n                        <Link to=\"/manual_crawl\">\n                            <Tab label=\"Start Crawl\"/>\n                        </Link>\n                    </Tabs>\n                    {value === 0 && <TabContainer>\n                        {/* Check whether we have data to show, then create a card for each domain */}\n                        {domainObj ? (Object.keys(domainObj).map((keyName, keyIndex) => {\n                            // Use keyName to get current key's name, domainObj[keyName] to get value\n                            return (<DomainCard\n                                isSelected={true}\n                                statsIcon=\"fa fa-history\"\n                                key={keyIndex}\n                                statusCode={domainObj[keyName].Status}\n                                statusInfo={domainObj[keyName]}\n                                id={keyName}\n                                domain={keyName}\n                            />);\n                        })) : (<p> Could Not Get Data </p>)\n                        }\n                    </TabContainer>}\n                    {value === 1 && <TabContainer>\n                        {/* Check whether we have data to show, then create a card for each domain */}\n                        {monthlyDomainObj ? (Object.keys(monthlyDomainObj).map((keyName, keyIndex) => {\n                            // Use keyName to get current key's name, domainObj[keyName] to get value\n                            return (<DomainCard\n                                isSelected={true}\n                                statsIcon=\"fa fa-history\"\n                                key={keyIndex}\n                                statusCode={monthlyDomainObj[keyName].Status}\n                                statusInfo={monthlyDomainObj[keyName]}\n                                id={keyName}\n                                domain={keyName}\n                            />);\n                        })) : (<p> Could Not Get Data </p>)\n                        }\n                    </TabContainer>}\n                    {value === 2 && <TabContainer>\n                        <FofView selected={selected}/>\n                    </TabContainer>}\n                </div>\n            );\n        }\n    }\n}\n\nexport default StatusView;","import React, {Component} from 'react';\nimport api from '../components/actions/api';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport './manualCrawl.css';\n\n\nclass ManualCrawl extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            crawlDomain: \"\",\n            userEmail: \"\",\n            crawlType: \"404\"\n        };\n    }\n\n    startCrawl = () => {\n        // Get values from state\n        let domain = this.state.crawlDomain;\n        let email = this.state.userEmail;\n        let cType = this.state.crawlType;\n\n        domain.replace('https://', '');\n        domain.replace('http://', '');\n        console.log(domain);\n\n        // Check for empty values & acadia email\n        if (domain.length < 2 || email.length < 2) {\n            return alert('Domain/Email Invalid');\n        } else if (email.indexOf(\"@acadiahealthcare.com\") < 0) {\n            return alert('Requires Acadia Email');\n        }\n\n        // Start request for crawl\n        api.crawl.startCrawl(domain, email, cType).then(resp => {\n            alert(resp);\n        });\n    };\n\n    // Set state for domain\n    updateDomain = (val) => {\n        // Remove protocols and trailing slash\n        val = val.replace('https://', '');\n        val = val.replace('http://', '');\n        val = val.replace(/\\/$/, \"\");\n\n        this.setState({\n            crawlDomain: val\n        });\n    };\n\n    // Set state for user email\n    updateUserEmail = (val) => {\n        this.setState({\n            userEmail: val\n        });\n    };\n\n    // update crawl type selection\n    handleSelect = val => {\n        this.setState({\n            crawlType: val\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"content\">\n                <h3>Crawl Domain</h3>\n\n                <form className=\"\" noValidate autoComplete=\"off\">\n                    <p>\n                        Trigger a crawl and receive errors to your email.\n                        <br/>\n                        Crawl times vary by domain.\n                    </p>\n                    <FormControl className=\"\">\n                        <InputLabel htmlFor=\"filterCrawlType\">Crawl Type</InputLabel>\n                        <Select\n                            style={{width: '120px', color: '#ff9800'}}\n                            value={this.state.crawlType}\n                            onChange={(e) => this.handleSelect(e.target.value)}\n                            inputProps={{\n                                name: 'crawlType',\n                                id: 'filterCrawlType',\n                            }}\n                        >\n                            <MenuItem value={'404'}>404</MenuItem>\n                            <MenuItem value={'sitemap'}>Sitemap</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <br/>\n                    <TextField\n                        required\n                        id=\"standard-required\"\n                        label=\"Domain\"\n                        defaultValue={this.state.crawlDomain}\n                        onChange={(e) => this.updateDomain(e.target.value)}\n                        className=\"textField\"\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <TextField\n                        required\n                        id=\"standard-required\"\n                        label=\"Email\"\n                        defaultValue={this.state.userAgent}\n                        onChange={(e) => this.updateUserEmail(e.target.value)}\n                        className=\"textField\"\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <Button variant=\"contained\" color=\"primary\" className=\"\" onClick={this.startCrawl}>\n                        Start Crawl\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default ManualCrawl;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport keycode from 'keycode';\nimport Downshift from 'downshift';\nimport TextField from 'material-ui/TextField';\nimport Paper from 'material-ui/Paper';\nimport {MenuItem} from 'material-ui/Menu';\nimport Chip from 'material-ui/Chip';\nimport api from \"../components/actions/api\";\n\nlet suggestions = [];\n\nfunction renderInput(inputProps) {\n    const {InputProps, ref, ...other} = inputProps;\n\n    return (\n        <TextField\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: 'autoComplete-inputRoot',\n                },\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\n// Get list of facility/domain pairs\nfunction retrieveList() {\n    // Get weekly status\n    api.facility.getFacilityList().then(resp => {\n        suggestions = [\n            {\n                label: \"All CTC\",\n                url: \"ctc\"\n            },\n            {\n                label: \"All Inpatient\",\n                url: \"inpatient\"\n            },\n            {\n                label: \"All Residential Dual\",\n                url: \"residentialDual\"\n            },\n            {\n                label: \"All Residential SA\",\n                url: \"residentialSA\"\n            },\n            {\n                label: \"All Specialty\",\n                url: \"specialty\"\n            }\n        ];\n        for (let key in resp) {\n            suggestions.push(\n                {\n                    label: resp[key].FacilityName,\n                    url: key,\n                    type: resp[key].FacilityType\n                }\n            )\n        }\n    });\n}\n\nfunction renderSuggestion({suggestion, index, itemProps, highlightedIndex, selectedItem}) {\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n\n    return (\n        <MenuItem\n            {...itemProps}\n            key={suggestion.label}\n            selected={isHighlighted}\n            component=\"div\"\n            style={{\n                fontWeight: isSelected ? 500 : 400,\n            }}\n        >\n            {suggestion.label}\n        </MenuItem>\n    );\n}\n\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.number,\n    index: PropTypes.number,\n    itemProps: PropTypes.object,\n    selectedItem: PropTypes.string,\n    suggestion: PropTypes.shape({label: PropTypes.string}).isRequired,\n};\n\nfunction getSuggestions(inputValue) {\n    let count = 0;\n\n    return suggestions.filter(suggestion => {\n        const keep =\n            (!inputValue || suggestion.label.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1) &&\n            count < 10;  // max suggestions to show\n\n        if (keep) {\n            count += 1;\n        }\n\n        return keep;\n    });\n}\n\n\nclass FacilityAutoComplete extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        if (suggestions.length < 1) {\n            retrieveList();\n        }\n    }\n\n    // Check local storage for saved facilities\n    savedFacilities = localStorage.getItem(\"selectedFacilities\") != null ?\n        localStorage.getItem(\"selectedFacilities\") : [];\n\n    state = {\n        inputValue: '',\n        selectedItem: this.savedFacilities.length > 0 ? this.savedFacilities.split(',') : [],\n    };\n\n    handleKeyDown = event => {\n        let {inputValue, selectedItem} = this.state;\n        if (selectedItem.length && !inputValue.length && keycode(event) === 'backspace') {\n            selectedItem = selectedItem.slice(0, selectedItem.length - 1);\n            this.setState({\n                selectedItem\n            });\n\n            // Pass updated selected facilities back to parent component\n            this.props.onUpdate(selectedItem);\n            localStorage.setItem(\"selectedFacilities\", selectedItem);\n        }\n    };\n\n    handleInputChange = event => {\n        this.setState({inputValue: event.target.value});\n    };\n\n    handleChange = item => {\n        let {selectedItem} = this.state;\n\n        if (selectedItem.indexOf(item) === -1) {\n            selectedItem = [...selectedItem, item];\n        }\n\n        this.setState({\n            inputValue: '',\n            selectedItem,\n        });\n\n        // Pass updated selected facilities back to parent component\n        this.props.onUpdate(selectedItem);\n        localStorage.setItem(\"selectedFacilities\", selectedItem);\n    };\n\n    handleDelete = item => () => {\n        const selectedItem = [...this.state.selectedItem];\n        selectedItem.splice(selectedItem.indexOf(item), 1);\n\n        this.setState({selectedItem});\n\n        // Pass updated selected facilities back to parent component\n        this.props.onUpdate(selectedItem);\n        localStorage.setItem(\"selectedFacilities\", selectedItem);\n    };\n\n    render() {\n        const {inputValue, selectedItem} = this.state;\n\n        return (\n            <Downshift inputValue={inputValue} onChange={this.handleChange} selectedItem={selectedItem}>\n                {({\n                      getInputProps,\n                      getItemProps,\n                      isOpen,\n                      inputValue: inputValue2,\n                      selectedItem: selectedItem2,\n                      highlightedIndex,\n                  }) => (\n                    <div className='autoComplete-container'>\n                        {renderInput({\n                            fullWidth: true,\n                            InputProps: getInputProps({\n                                startAdornment: selectedItem.map(item => (\n                                    <Chip\n                                        key={item}\n                                        tabIndex={-1}\n                                        label={item}\n                                        className='autoComplete-chip'\n                                        onDelete={this.handleDelete(item)}\n                                    />\n                                )),\n                                onChange: this.handleInputChange,\n                                onKeyDown: this.handleKeyDown,\n                                placeholder: 'Search facility',\n                                id: 'integration-downshift-multiple',\n                            }),\n                        })}\n                        {isOpen ? (\n                            <Paper className='autoComplete-paper' square>\n                                {getSuggestions(inputValue2).map((suggestion, index) =>\n                                    renderSuggestion({\n                                        suggestion,\n                                        index,\n                                        itemProps: getItemProps({item: suggestion.label}),\n                                        highlightedIndex,\n                                        selectedItem: selectedItem2,\n                                    }),\n                                )}\n                            </Paper>\n                        ) : null}\n                    </div>\n                )}\n            </Downshift>\n        );\n    }\n}\n\nexport default FacilityAutoComplete;\n\n\n","// Collection of global Dash funcs\n\nimport moment from \"moment\";\n\nexport default {\n    storePak: (input) => {\n        // Convert JSON input to string\n        let stringYakPak = JSON.stringify(input);\n\n        // Save it to local storage\n        window.localStorage.setItem('yakPak', stringYakPak);\n    },\n    retrievePak: () => {\n        // Retrieve and return yakPak local store string and rehydrate it  (convert back to JSON)\n        if (JSON.parse(window.localStorage.getItem('yakPak')) == null) {\n            return {\n                SelectedFacility: [],\n                DateFrame: {\n                    From: moment().add(-7, 'days').format('YYYY-MM-DD'),\n                    To: moment().format('YYYY-MM-DD'),\n                    CompareFrom: '',\n                    CompareTo: ''\n                },\n                Filter: {\n                    conversion: [],\n                    touch: [],\n                    rollup: [],\n                    channel: [],\n                    source: [],\n                    campaign: [],\n                    tier: [],\n                    medium: [],\n                    disorder: [],\n                    network: [],\n                    targetingMethod: [],\n                    format: [],\n                    message: [],\n                    ageRange: [],\n                    ethnicity: [],\n                    familyRole: [],\n                    gender: [],\n                    income: [],\n                    interestsBehaviors: [],\n                    language: [],\n                    education: [],\n                    occupation: [],\n                    relationship: [],\n                    religion: []\n                },\n                Touch: {\n                    tabValue: 0\n                },\n                Conversion: {\n                    tabValue: 0\n                },\n                Explorer: {\n                    tabValue: 0\n                },\n                Storyboard: {\n                    tabValue: 0,\n                    searchMetric: 'ip',\n                    storyPivot: 'session'\n                },\n                Builder: {\n                    Columns: [],\n                },\n                Timeframe: {\n                    tabValue: 0\n                },\n            };\n        } else {\n            return JSON.parse(window.localStorage.getItem('yakPak'));\n        }\n\n    }\n}","import axios from \"axios\";  // request library\n\n// url for monitor status info endpoint\nlet statusURL = \"http://go-monitor.us-east-1.elasticbeanstalk.com/api/monitorstatus\";\nlet monthlyStatusURL = \"http://go-monitor.us-east-1.elasticbeanstalk.com/api/monthlymonitorstatus\";\nlet fofURL = \"http://go-monitor.us-east-1.elasticbeanstalk.com/api/404list\";\nlet facilityListURL = \"http://go-monitor.us-east-1.elasticbeanstalk.com/api/getFacilities\";\nlet authURL = \"\";\nlet updateURL = \"/updatePak\";\n\n// Check if we need to convert to relative url because basic auth\nif (document.location.host === \"monitor.acadiadevelopment.com\") {\n    statusURL = \"http://\" + document.location.host + \"/api/monitorstatus\";\n    monthlyStatusURL = \"http://\" + document.location.host + \"/api/monthlymonitorstatus\";\n    fofURL = \"http://\" + document.location.host + \"/api/404list\";\n}\n\n\nexport default {\n    facility: {\n        getFacilityList: () => {\n            return axios.get(facilityListURL).then((resp) => {\n                // console.log(resp.data);\n                return resp.data;\n            })\n                .catch((err) => {\n                    console.log(\"GET Facility List ERR: \", err);\n                })\n        }\n    },\n    fof: {\n        get404List: () => {\n            return axios.get(fofURL).then((resp) => {\n                return resp.data;\n            })\n                .catch((err) => {\n                    console.log(\"GET 404 ERR: \", err);\n                })\n        }\n    },\n    security: {\n        authenticateLogin: (user, pass) => {\n            // Set user creds in from data\n            let formData = new FormData();\n            formData.set('user', user);\n            formData.set('pass', pass);\n\n            return axios.post(authURL, formData, {headers: {'Content-Type': 'multipart/form-data'}})\n                .then((resp) => {\n                    return resp.data\n                })\n                .catch((err) => {\n                    console.log(\"Authentication ERR: \", err)\n                })\n        },\n        pushYakPak: (yakPak) => {\n            // Access the user's pak and push to goauth server to save\n            let formData = new FormData();\n            formData.set('yakpak', yakPak.toString());\n\n            axios.post(updateURL, formData, {headers: {'Content-Type': 'multipart/form-data'}})\n                .then((resp) => {\n                    console.log(\"pak stored.\")\n                })\n                .catch((err) => {\n                    console.log(\"Pak store ERR: \", err)\n                })\n        }\n    },\n    status: {\n        getStatusInfo: () => {\n            return axios.get(statusURL).then((resp) => {\n                return resp.data;\n            })\n                .catch((err) => {\n                    console.log(\"GET Status ERR: \", err);\n                })\n        },\n        getMonthlyStatusInfo: () => {\n            return axios.get(monthlyStatusURL).then((resp) => {\n                return resp.data;\n            })\n                .catch((err) => {\n                    console.log(\"GET MonthlyStatus ERR: \", err);\n                })\n        }\n    },\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport keycode from 'keycode';\nimport Downshift from 'downshift';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport api from '../api/api';\n\n\nlet suggestions = [];\n\nfunction renderInput(inputProps) {\n    const { InputProps, ref, ...other } = inputProps;\n\n    return (\n        <TextField\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: 'autoComplete-inputRoot',\n                },\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\n// Get list of facility/domain pairs\nfunction retrieveList() {\n    // Get weekly status\n    api.facility.getFacilityList().then(resp => {\n        suggestions = [\n            {\n                label: \"All CTC\",\n                url: \"CTC\"\n            },\n            {\n                label: \"All Inpatient\",\n                url: \"Inpatient\"\n            },\n            {\n                label: \"All Residential Dual\",\n                url: \"Residential Dual\"\n            },\n            {\n                label: \"All Residential SA\",\n                url: \"Residential SA\"\n            },\n            {\n                label: \"All Specialty\",\n                url: \"Specialty\"\n            }\n        ];\n        for (let key in resp) {\n            suggestions.push(\n                {\n                    label: resp[key].FacilityName,\n                    url: key,\n                    type: resp[key].FacilityType\n                }\n            )\n        }\n        suggestions.push();\n    });\n}\n\nfunction renderSuggestion({ suggestion, index, itemProps, highlightedIndex, selectedItem }) {\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n\n    return (\n        <MenuItem\n            {...itemProps}\n            key={suggestion.label}\n            selected={isHighlighted}\n            component=\"div\"\n            style={{\n                fontWeight: isSelected ? 500 : 400,\n            }}\n        >\n            {suggestion.label}\n        </MenuItem>\n    );\n}\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.number,\n    index: PropTypes.number,\n    itemProps: PropTypes.object,\n    selectedItem: PropTypes.string,\n    suggestion: PropTypes.shape({ label: PropTypes.string }).isRequired,\n};\n\nfunction getSuggestions(inputValue) {\n    let count = 0;\n\n    return suggestions.filter(suggestion => {\n        const keep =\n            (!inputValue || suggestion.label.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1) &&\n            count < 10;  // max suggestions to show\n\n        if (keep) {\n            count += 1;\n        }\n\n        return keep;\n    });\n}\n\n\nclass FacilityAutoComplete extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        if (suggestions.length < 1) {\n            retrieveList();\n        }\n    }\n\n    // Check local storage for saved facilities\n    savedFacilities = this.props.selected;\n\n    state = {\n        inputValue: '',\n        selectedItem: this.savedFacilities //this.savedFacilities.length > 0 ? this.savedFacilities.split(',') : [],\n    };\n\n    handleKeyDown = event => {\n        let { inputValue, selectedItem } = this.state;\n        if (selectedItem.length && !inputValue.length && keycode(event) === 'backspace') {\n            selectedItem = selectedItem.slice(0, selectedItem.length - 1);\n            this.setState({\n                selectedItem\n            });\n\n            // Pass updated selected facilities back to parent component\n            this.props.onUpdate(selectedItem);\n            // localStorage.setItem(\"selectedFacilities\", selectedItem);\n        }\n    };\n\n    handleInputChange = event => {\n        this.setState({ inputValue: event.target.value });\n    };\n\n    handleChange = item => {\n        let { selectedItem } = this.state;\n\n        if (selectedItem.indexOf(item) === -1) {\n            selectedItem = [...selectedItem, item];\n        }\n\n        this.setState({\n            inputValue: '',\n            selectedItem,\n        });\n\n        // Pass updated selected facilities back to parent component\n        this.props.onUpdate(selectedItem);\n        //localStorage.setItem(\"selectedFacilities\", selectedItem);\n    };\n\n    handleDelete = item => () => {\n        const selectedItem = [...this.state.selectedItem];\n        selectedItem.splice(selectedItem.indexOf(item), 1);\n\n        this.setState({ selectedItem });\n\n        // Pass updated selected facilities back to parent component\n        this.props.onUpdate(selectedItem);\n        //localStorage.setItem(\"selectedFacilities\", selectedItem);\n    };\n\n    render() {\n        const { inputValue, selectedItem } = this.state;\n\n        return (\n            <Downshift inputValue={inputValue} onChange={this.handleChange} selectedItem={selectedItem}>\n                {({\n                      getInputProps,\n                      getItemProps,\n                      isOpen,\n                      inputValue: inputValue2,\n                      selectedItem: selectedItem2,\n                      highlightedIndex,\n                  }) => (\n                    <div className='autoComplete-container'>\n                        {renderInput({\n                            fullWidth: true,\n                            InputProps: getInputProps({\n                                startAdornment: selectedItem.map(item => (\n                                    <Chip\n                                        key={item}\n                                        tabIndex={-1}\n                                        label={item}\n                                        className='autoComplete-chip'\n                                        onDelete={this.handleDelete(item)}\n                                    />\n                                )),\n                                onChange: this.handleInputChange,\n                                onKeyDown: this.handleKeyDown,\n                                placeholder: 'Search facility',\n                                id: 'integration-downshift-multiple',\n                            }),\n                        })}\n                        {isOpen ? (\n                            <Paper className='autoComplete-paper' square>\n                                {getSuggestions(inputValue2).map((suggestion, index) =>\n                                    renderSuggestion({\n                                        suggestion,\n                                        index,\n                                        itemProps: getItemProps({ item: suggestion.label }),\n                                        highlightedIndex,\n                                        selectedItem: selectedItem2,\n                                    }),\n                                )}\n                            </Paper>\n                        ) : null}\n\n                    </div>\n                )}\n\n            </Downshift>\n        );\n    }\n}\n\nexport default FacilityAutoComplete;","import React from 'react';\nimport MaterialIcon from 'material-icons-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nclass SKUFilter extends React.Component {\n\n    currentFilter = this.props.selected;\n    rightDrawer = this.props.rightDrawer;\n\n    state = {\n        Filter: this.currentFilter,\n        right: this.rightDrawer\n    };\n\n    toggleDrawer = (side) => () => {\n\n        if (this.state.right) {\n            this.setState({\n                [side]: false,\n            });\n        } else {\n            this.setState({\n                [side]: true,\n            });\n        }\n\n    };\n\n    // update sku filter state\n    handleSelect = name => event => {\n        // console.log(event.target.name, event.target.value);\n        // dummy object so we don't clear other filter values\n        let dummyObj = this.state.Filter;\n        dummyObj[name] = event.target.value;\n\n        this.setState({\n            Filter: dummyObj\n        });\n        // console.log(this.state.Filter);\n\n        // re-assign dummyObj\n        dummyObj = this.state.Filter;\n\n        // send update to main state\n        this.props.onUpdate(dummyObj);\n    };\n\n    // clear filters from state\n    clearFilters = () => {\n        let cleanFilter = {\n            conversion: [],\n            touch: [],\n            rollup: [],\n            channel: [],\n            source: [],\n            campaign: [],\n            tier: [],\n            medium: [],\n            disorder: [],\n            network: [],\n            targetingMethod: [],\n            format: [],\n            message: [],\n            ageRange: [],\n            ethnicity: [],\n            familyRole: [],\n            gender: [],\n            income: [],\n            interestsBehaviors: [],\n            language: [],\n            education: [],\n            occupation: [],\n            relationship: [],\n            religion: []\n        };\n\n        this.setState({\n            Filter: cleanFilter\n        });\n\n        this.props.onUpdate(cleanFilter);\n    };\n\n    render() {\n        return (\n            <div className=\"filterComponent\">\n                <Tooltip title=\"Show Filters\" placement=\"bottom\">\n                    <Button onClick={this.toggleDrawer('right')} style={{top: '5px'}}>\n                        <MaterialIcon icon='filter_list' size={24} color='#ff9800'/>\n                    </Button>\n                </Tooltip>\n\n                <Drawer\n                    anchor=\"right\"\n                    open={this.state.right}\n                    onClose={this.toggleDrawer('right')}\n                    style={{display: 'block'}}\n                >\n                    <div style={{margin: 'auto', position: 'absolute', bottom: '8px', left: '25%'}}>\n                        <Button variant=\"contained\"\n                                style={{backgroundColor: '#ff9800', color: '#ffffff', margin: '5px'}}\n                                onClick={() => {\n                                    this.toggleDrawer('right', false);\n                                    window.location.reload();\n                                }}>\n                            Apply\n                        </Button>\n                        <Button variant=\"contained\" style={{margin: '5px'}}\n                                onClick={() => {\n                                    this.clearFilters();\n                                    //window.location.reload();\n                                }}>\n                            Clear\n                        </Button>\n                    </div>\n                    <div\n                        style={{width: 400, padding: 20, paddingTop: 5, height: '90%', overflowY: 'scroll'}}\n                        tabIndex={0}\n                        role=\"button\"\n                        onKeyDown={this.toggleDrawer('right')}\n                    >\n                        <form className=\"skuFilter\" noValidate autoComplete=\"off\">\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterConversion\">Conversion</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.conversion}\n                                    onChange={this.handleSelect('conversion')}\n                                    inputProps={{\n                                        name: 'conversion',\n                                        id: 'filterConversion',\n                                    }}\n                                >\n                                    <MenuItem value={'all'}>All</MenuItem>\n                                    <MenuItem value={'phone'}>Phone Call</MenuItem>\n                                    <MenuItem value={'webForm'}>Web Form</MenuItem>\n                                    <MenuItem value={'tos5'}>5+ TOS</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterTouch\">Touch</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.touch}\n                                    onChange={this.handleSelect('touch')}\n                                    inputProps={{\n                                        name: 'touch',\n                                        id: 'filterTouch',\n                                    }}\n                                >\n                                    <MenuItem value={'first'}>First</MenuItem>\n                                    <MenuItem value={'converting'}>Converting</MenuItem>\n                                    <MenuItem value={'Latest'}>Latest</MenuItem>\n                                    <MenuItem value={'contributing'}>Contributing</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterRollup\">Rollup</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.rollup}\n                                    onChange={this.handleSelect('rollup')}\n                                    inputProps={{\n                                        name: 'rollup',\n                                        id: 'filterRollup',\n                                    }}\n                                >\n                                    <MenuItem value={'direct'}>Direct</MenuItem>\n                                    <MenuItem value={'email'}>Email</MenuItem>\n                                    <MenuItem value={'organic'}>Organic</MenuItem>\n                                    <MenuItem value={'paidAdvertising'}>Paid Advertising</MenuItem>\n                                    <MenuItem value={'referring'}>Referring</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterChannel\">Channel</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.channel}\n                                    onChange={this.handleSelect('channel')}\n                                    inputProps={{\n                                        name: 'channel',\n                                        id: 'filterChannel',\n                                    }}\n                                >\n                                    <MenuItem value={'all'}>All</MenuItem>\n                                    <MenuItem value={'direct'}>Direct</MenuItem>\n                                    <MenuItem value={'email'}>Email</MenuItem>\n                                    <MenuItem value={'email_leadGen'}>Email - Lead Gen</MenuItem>\n                                    <MenuItem value={'email_other'}>Email - Other</MenuItem>\n                                    <MenuItem value={'email_signUp'}>Email - Sign Up</MenuItem>\n                                    <MenuItem value={'organic'}>Organic</MenuItem>\n                                    <MenuItem value={'organic_other'}>Organic - Other</MenuItem>\n                                    <MenuItem value={'organic_bing'}>Organic - Bing</MenuItem>\n                                    <MenuItem value={'organic_google'}>Organic - Google</MenuItem>\n                                    <MenuItem value={'organic_yahoo'}>Organic - Yahoo</MenuItem>\n                                    <MenuItem value={'organic_other_search'}>Organic - Search - Other</MenuItem>\n                                    <MenuItem value={'organic_facebook'}>Organic - Facebook</MenuItem>\n                                    <MenuItem value={'organic_instagram'}>Organic - Instagram</MenuItem>\n                                    <MenuItem value={'organic_linkedin'}>Organic - LinkedIn</MenuItem>\n                                    <MenuItem value={'organic_pinterest'}>Organic - Pinterest</MenuItem>\n                                    <MenuItem value={'organic_youtube'}>Organic - YouTube</MenuItem>\n                                    <MenuItem value={'organic_other_social'}>Organic - Social - Other</MenuItem>\n                                    <MenuItem value={'paidAdvertising'}>Paid Advertising</MenuItem>\n                                    <MenuItem value={'referring'}>Referring</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Directories - Choose Help</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Directories - Choose Help -\n                                        Alcohol</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Directories - Other</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Directories - Psych Today</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Directories - Psych Today -\n                                        Alcohol</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Directories - Yellow Pages</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Directories - Yellow Pages -\n                                        Alcohol</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Directories - Yelp</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Directories - Yelp - Alcohol</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Internal</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Internal - Acadia</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Internal - ARC</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Internal - Something Fishy</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Other</MenuItem>\n                                </Select>\n                            </FormControl>\n\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterSource\">Source</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.source}\n                                    onChange={this.handleSelect('source')}\n                                    inputProps={{\n                                        name: 'source',\n                                        id: 'filterSource',\n                                    }}\n                                >\n                                    <MenuItem value={'all'}>All</MenuItem>\n                                    <MenuItem value={'acadia'}>Acadia</MenuItem>\n                                    <MenuItem value={'arc'}>ARC</MenuItem>\n                                    <MenuItem value={'bing'}>Bing</MenuItem>\n                                    <MenuItem value={'chooseHelp'}>Choose Help</MenuItem>\n                                    <MenuItem value={'exactTarget'}>Exact Target</MenuItem>\n                                    <MenuItem value={'facebook'}>Facebook</MenuItem>\n                                    <MenuItem value={'gdn'}>GDN</MenuItem>\n                                    <MenuItem value={'google'}>Google</MenuItem>\n                                    <MenuItem value={'guidedocs'}>Guidedocs</MenuItem>\n                                    <MenuItem value={'healthyPlace'}>Healthy Place</MenuItem>\n                                    <MenuItem value={'instagram'}>Instagram</MenuItem>\n                                    <MenuItem value={'linkedIn'}>LinkedIn</MenuItem>\n                                    <MenuItem value={'mediaMath'}>Media Math</MenuItem>\n                                    <MenuItem value={'other'}>Other</MenuItem>\n                                    <MenuItem value={'pinterest'}>Pinterest</MenuItem>\n                                    <MenuItem value={'psychToday'}>Psych Today</MenuItem>\n                                    <MenuItem value={'quora'}>Quora</MenuItem>\n                                    <MenuItem value={'somethingFishy'}>Something Fishy</MenuItem>\n                                    <MenuItem value={'tremor'}>Tremor</MenuItem>\n                                    <MenuItem value={'yahoo'}>Yahoo</MenuItem>\n                                    <MenuItem value={'yellowPages'}>Yellow Pages</MenuItem>\n                                    <MenuItem value={'yelp'}>Yelp</MenuItem>\n                                    <MenuItem value={'youtube'}>YouTube</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterCampaign\">Campaign</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.campaign}\n                                    onChange={this.handleSelect('campaign')}\n                                    inputProps={{\n                                        name: 'campaign',\n                                        id: 'filterCampaign',\n                                    }}\n                                >\n                                    <MenuItem value={'all'}>All</MenuItem>\n                                    <MenuItem value={'alcohol'}>Alcohol</MenuItem>\n                                    <MenuItem value={'amphetamine'}>Amphetamine</MenuItem>\n                                    <MenuItem value={'cocaine'}>Cocaine</MenuItem>\n                                    <MenuItem value={'opiate'}>Opiates</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterTier\">Tier</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.tier}\n                                    onChange={this.handleSelect('tier')}\n                                    inputProps={{\n                                        name: 'tier',\n                                        id: 'filterTier',\n                                    }}\n                                >\n                                    <MenuItem value={'all'}>All</MenuItem>\n                                    <MenuItem value={'t1'}>T1</MenuItem>\n                                    <MenuItem value={'t2'}>T2</MenuItem>\n                                    <MenuItem value={'t3'}>T3</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterMedium\">Medium</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.medium}\n                                    onChange={this.handleSelect('medium')}\n                                    inputProps={{\n                                        name: 'medium',\n                                        id: 'filterMedium',\n                                    }}\n                                >\n                                    <MenuItem value={'all'}>All</MenuItem>\n                                    <MenuItem value={'directories'}>Directories</MenuItem>\n                                    <MenuItem value={'internalDirectories'}>Internal Directories</MenuItem>\n                                    <MenuItem value={'leadGen'}>Lead Gen</MenuItem>\n                                    <MenuItem value={'other'}>Other</MenuItem>\n                                    <MenuItem value={'placement'}>Placement</MenuItem>\n                                    <MenuItem value={'search'}>Search</MenuItem>\n                                    <MenuItem value={'searchEngine'}>Search Engine</MenuItem>\n                                    <MenuItem value={'signUp'}>Sign Up</MenuItem>\n                                    <MenuItem value={'social'}>Social</MenuItem>\n                                    <MenuItem value={'sponsorship'}>Sponsorship</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterDisorder\">Disorder</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.disorder}\n                                    onChange={this.handleSelect('disorder')}\n                                    inputProps={{\n                                        name: 'disorder',\n                                        id: 'filterDisorder',\n                                    }}\n                                >\n                                    <MenuItem value={'all'}>All</MenuItem>\n                                    <MenuItem value={'alcohol'}>Alcohol</MenuItem>\n                                </Select>\n                            </FormControl>\n\n                            <h5 style={{marginBottom: 0, color: '#ff9800'}}>SKU</h5>\n\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterNetwork\">Network</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.network}\n                                    onChange={this.handleSelect('network')}\n                                    inputProps={{\n                                        name: 'network',\n                                        id: 'filterNetwork',\n                                    }}\n                                >\n                                    <MenuItem value={'a0'}>All</MenuItem>\n                                    <MenuItem value={'a1'}>Search</MenuItem>\n                                    <MenuItem value={'a2'}>Display</MenuItem>\n                                    <MenuItem value={'a3'}>Social</MenuItem>\n                                    <MenuItem value={'a4'}>Email</MenuItem>\n                                    <MenuItem value={'a5'}>Ad_Video</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterTargeting\">Targeting</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.targetingMethod}\n                                    onChange={this.handleSelect('targetingMethod')}\n                                    inputProps={{\n                                        name: 'targetingMethod',\n                                        id: 'filterTargeting',\n                                    }}\n                                >\n                                    <MenuItem value={'b0'}>All</MenuItem>\n                                    <MenuItem value={'b1'}>KWD</MenuItem>\n                                    <MenuItem value={'b2'}>MP</MenuItem>\n                                    <MenuItem value={'b3'}>MP - KWD</MenuItem>\n                                    <MenuItem value={'b4'}>Topic</MenuItem>\n                                    <MenuItem value={'b5'}>Topic - KWD</MenuItem>\n                                    <MenuItem value={'b6'}>Connection</MenuItem>\n                                    <MenuItem value={'b7'}>Behavior</MenuItem>\n                                    <MenuItem value={'b8'}>Demographic</MenuItem>\n                                    <MenuItem value={'b9'}>Interest</MenuItem>\n                                    <MenuItem value={'b10'}>Lookalike</MenuItem>\n                                    <MenuItem value={'b11'}>Remarketing</MenuItem>\n                                    <MenuItem value={'b12'}>Newsletter - About</MenuItem>\n                                    <MenuItem value={'b13'}>Newsletter - Programs</MenuItem>\n                                    <MenuItem value={'b14'}>Newsletter - Addiction</MenuItem>\n                                    <MenuItem value={'b15'}>Newsletter - PTSD</MenuItem>\n                                    <MenuItem value={'b16'}>Newsletter - MH</MenuItem>\n                                    <MenuItem value={'b17'}>Run of Site</MenuItem>\n                                    <MenuItem value={'b18'}>Geographic</MenuItem>\n                                    <MenuItem value={'b19'}>Conversion</MenuItem>\n                                    <MenuItem value={'b20'}>Newsletter - Mood</MenuItem>\n                                    <MenuItem value={'b21'}>Custom Segments</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl>\n                                <InputLabel htmlFor=\"filterFormat\">Format</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.format}\n                                    onChange={this.handleSelect('format')}\n                                    inputProps={{\n                                        name: 'format',\n                                        id: 'filterFormat',\n                                    }}\n                                >\n                                    <MenuItem value={'c0'}>All</MenuItem>\n                                    <MenuItem value={'c1'}>CanvasAd</MenuItem>\n                                    <MenuItem value={'c2'}>2 Headline</MenuItem>\n                                    <MenuItem value={'c3'}>GIF</MenuItem>\n                                    <MenuItem value={'c4'}>GmailAd</MenuItem>\n                                    <MenuItem value={'c5'}>HTML</MenuItem>\n                                    <MenuItem value={'c6'}>Image Carousel</MenuItem>\n                                    <MenuItem value={'c7'}>Lightbox</MenuItem>\n                                    <MenuItem value={'c8'}>Link Post</MenuItem>\n                                    <MenuItem value={'c9'}>Photo Post</MenuItem>\n                                    <MenuItem value={'c10'}>Responsive</MenuItem>\n                                    <MenuItem value={'c11'}>Static Image</MenuItem>\n                                    <MenuItem value={'c12'}>Video</MenuItem>\n                                    <MenuItem value={'c13'}>Video Carousel</MenuItem>\n                                    <MenuItem value={'c14'}>Long Content - No Image</MenuItem>\n                                    <MenuItem value={'c15'}>Long Content - Image</MenuItem>\n                                    <MenuItem value={'c16'}>Short Content - No Image</MenuItem>\n                                    <MenuItem value={'c17'}>Short Content - Image</MenuItem>\n                                    <MenuItem value={'c18'}>Banner</MenuItem>\n                                    <MenuItem value={'c19'}>Profile</MenuItem>\n                                    <MenuItem value={'c20'}>Text Ad</MenuItem>\n                                    <MenuItem value={'c20'}>3 Headline</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl>\n                                <InputLabel htmlFor=\"filterMessage\">Message</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.message}\n                                    onChange={this.handleSelect('message')}\n                                    inputProps={{\n                                        name: 'message',\n                                        id: 'filterMessage',\n                                    }}\n                                >\n                                    <MenuItem value={'d0'}>All</MenuItem>\n                                    <MenuItem value={'d1'}>About - General</MenuItem>\n                                    <MenuItem value={'d2'}>About - Other</MenuItem>\n                                    <MenuItem value={'d3'}>About - Self</MenuItem>\n                                    <MenuItem value={'d4'}>Benefits - General</MenuItem>\n                                    <MenuItem value={'d5'}>Benefits - Other</MenuItem>\n                                    <MenuItem value={'d6'}>Benefits - Self</MenuItem>\n                                    <MenuItem value={'d7'}>Emotion - General</MenuItem>\n                                    <MenuItem value={'d8'}>Emotion - Other</MenuItem>\n                                    <MenuItem value={'d9'}>Emotion - Self</MenuItem>\n                                    <MenuItem value={'d10'}>Leading - General</MenuItem>\n                                    <MenuItem value={'d11'}>Leading - Other</MenuItem>\n                                    <MenuItem value={'d12'}>Leading - Self</MenuItem>\n                                    <MenuItem value={'d13'}>Scare - General</MenuItem>\n                                    <MenuItem value={'d14'}>Scare - Other</MenuItem>\n                                    <MenuItem value={'d15'}>Scare - Self</MenuItem>\n                                    <MenuItem value={'d16'}>Stats - General</MenuItem>\n                                    <MenuItem value={'d17'}>Stats - Other</MenuItem>\n                                    <MenuItem value={'d18'}>Stats - Self</MenuItem>\n                                    <MenuItem value={'d19'}>Urgent - General</MenuItem>\n                                    <MenuItem value={'d20'}>Urgent - Other</MenuItem>\n                                    <MenuItem value={'d21'}>Urgent - Self</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterAgeRange\">Age Range</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.ageRange}\n                                    onChange={this.handleSelect('ageRange')}\n                                    inputProps={{\n                                        name: 'ageRange',\n                                        id: 'filterAgeRange',\n                                    }}\n                                >\n                                    <MenuItem value={'e1'}>18 - 24</MenuItem>\n                                    <MenuItem value={'e2'}>25 - 34</MenuItem>\n                                    <MenuItem value={'e3'}>35 - 44</MenuItem>\n                                    <MenuItem value={'e4'}>35 - 49</MenuItem>\n                                    <MenuItem value={'e5'}>45 - 54</MenuItem>\n                                    <MenuItem value={'e6'}>50 - 64</MenuItem>\n                                    <MenuItem value={'e7'}>55 - 64</MenuItem>\n                                    <MenuItem value={'e8'}>65+</MenuItem>\n                                    <MenuItem value={'e9'}>All</MenuItem>\n                                    <MenuItem value={'e10'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterEthnicity\">Ethnicity</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.ethnicity}\n                                    onChange={this.handleSelect('ethnicity')}\n                                    inputProps={{\n                                        name: 'ethnicity',\n                                        id: 'filterEthnicity',\n                                    }}\n                                >\n                                    <MenuItem value={'f9'}>All</MenuItem>\n                                    <MenuItem value={'f1'}>African American</MenuItem>\n                                    <MenuItem value={'f2'}>Asian</MenuItem>\n                                    <MenuItem value={'f3'}>Hispanic</MenuItem>\n                                    <MenuItem value={'f4'}>Native American</MenuItem>\n                                    <MenuItem value={'f5'}>Pacific Islander</MenuItem>\n                                    <MenuItem value={'f6'}>Two or more</MenuItem>\n                                    <MenuItem value={'f7'}>White</MenuItem>\n                                    <MenuItem value={'f8'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterFamilyRole\">Family Role</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.familyRole}\n                                    onChange={this.handleSelect('familyRole')}\n                                    inputProps={{\n                                        name: 'familyRole',\n                                        id: 'filterFamilyRole',\n                                    }}\n                                >\n                                    <MenuItem value={'g13'}>All</MenuItem>\n                                    <MenuItem value={'g1'}>Brother</MenuItem>\n                                    <MenuItem value={'g2'}>Daughter</MenuItem>\n                                    <MenuItem value={'g3'}>Husband</MenuItem>\n                                    <MenuItem value={'g4'}>Parent - Expecting</MenuItem>\n                                    <MenuItem value={'g5'}>Parent - 0-12 Month</MenuItem>\n                                    <MenuItem value={'g6'}>Parent - Pre-Teen</MenuItem>\n                                    <MenuItem value={'g7'}>Parent - Teen</MenuItem>\n                                    <MenuItem value={'g8'}>Parent - Adult Child</MenuItem>\n                                    <MenuItem value={'g9'}>Sister</MenuItem>\n                                    <MenuItem value={'g10'}>Son</MenuItem>\n                                    <MenuItem value={'g11'}>Wife</MenuItem>\n                                    <MenuItem value={'g12'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterGender\">Gender</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.gender}\n                                    onChange={this.handleSelect('gender')}\n                                    inputProps={{\n                                        name: 'gender',\n                                        id: 'filterGender',\n                                    }}\n                                >\n                                    <MenuItem value={'h4'}>All</MenuItem>\n                                    <MenuItem value={'h1'}>Female</MenuItem>\n                                    <MenuItem value={'h2'}>Male</MenuItem>\n                                    <MenuItem value={'h3'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterIncome\">Income</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.income}\n                                    onChange={this.handleSelect('income')}\n                                    inputProps={{\n                                        name: 'income',\n                                        id: 'filterIncome',\n                                    }}\n                                >\n                                    <MenuItem value={'i12'}>All</MenuItem>\n                                    <MenuItem value={'i1'}>39k or less</MenuItem>\n                                    <MenuItem value={'i2'}>40k - 49k</MenuItem>\n                                    <MenuItem value={'i3'}>50k - 74k</MenuItem>\n                                    <MenuItem value={'i4'}>75k - 99k</MenuItem>\n                                    <MenuItem value={'i5'}>100k - 124k</MenuItem>\n                                    <MenuItem value={'i6'}>125k - 149k</MenuItem>\n                                    <MenuItem value={'i7'}>150k - 249k</MenuItem>\n                                    <MenuItem value={'i8'}>250k - 349k</MenuItem>\n                                    <MenuItem value={'i9'}>350k - 499k</MenuItem>\n                                    <MenuItem value={'i10'}>500k or more</MenuItem>\n                                    <MenuItem value={'i11'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterInterestsBehaviors\">Interest/Behavior</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.interestsBehaviors}\n                                    onChange={this.handleSelect('interestsBehaviors')}\n                                    inputProps={{\n                                        name: 'interestsBehaviors',\n                                        id: 'filterInterestsBehaviors',\n                                    }}\n                                >\n                                    <MenuItem value={'j21'}>All</MenuItem>\n                                    <MenuItem value={'j1'}>Away from Family</MenuItem>\n                                    <MenuItem value={'j2'}>Away from Home</MenuItem>\n                                    <MenuItem value={'j3'}>Business and Industry</MenuItem>\n                                    <MenuItem value={'j4'}>Chronic Relapser</MenuItem>\n                                    <MenuItem value={'j5'}>Democrat</MenuItem>\n                                    <MenuItem value={'j6'}>Detox Seeker</MenuItem>\n                                    <MenuItem value={'j7'}>Entertainment</MenuItem>\n                                    <MenuItem value={'j8'}>Fitness and Wellness</MenuItem>\n                                    <MenuItem value={'j9'}>Food and Drink</MenuItem>\n                                    <MenuItem value={'j10'}>Friends of Alumni</MenuItem>\n                                    <MenuItem value={'j11'}>LGBT Population</MenuItem>\n                                    <MenuItem value={'j12'}>Outdoors</MenuItem>\n                                    <MenuItem value={'j13'}>Politics</MenuItem>\n                                    <MenuItem value={'j14'}>Previous Patient of Competitor</MenuItem>\n                                    <MenuItem value={'j15'}>Republican</MenuItem>\n                                    <MenuItem value={'j16'}>Shopping and Fashion</MenuItem>\n                                    <MenuItem value={'j17'}>Sports</MenuItem>\n                                    <MenuItem value={'j18'}>Technology</MenuItem>\n                                    <MenuItem value={'j19'}>Travel</MenuItem>\n                                    <MenuItem value={'j20'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterLanguage\">Language</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.language}\n                                    onChange={this.handleSelect('language')}\n                                    inputProps={{\n                                        name: 'language',\n                                        id: 'filterLanguage',\n                                    }}\n                                >\n                                    <MenuItem value={'k5'}>All</MenuItem>\n                                    <MenuItem value={'k1'}>English</MenuItem>\n                                    <MenuItem value={'k2'}>Spanish</MenuItem>\n                                    <MenuItem value={'k3'}>Bilingual</MenuItem>\n                                    <MenuItem value={'k4'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterEducation\">Education</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.education}\n                                    onChange={this.handleSelect('education')}\n                                    inputProps={{\n                                        name: 'education',\n                                        id: 'filterEducation',\n                                    }}\n                                >\n                                    <MenuItem value={'l11'}>All</MenuItem>\n                                    <MenuItem value={'l1'}>Some High School</MenuItem>\n                                    <MenuItem value={'l2'}>High School Grad</MenuItem>\n                                    <MenuItem value={'l3'}>Associate Degree</MenuItem>\n                                    <MenuItem value={'l4'}>Some College</MenuItem>\n                                    <MenuItem value={'l5'}>College Grad</MenuItem>\n                                    <MenuItem value={'l6'}>Professional Degree</MenuItem>\n                                    <MenuItem value={'l7'}>Some Grad School</MenuItem>\n                                    <MenuItem value={'l8'}>Masters Degree</MenuItem>\n                                    <MenuItem value={'l9'}>Doctorate Degree</MenuItem>\n                                    <MenuItem value={'l10'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterOccupation\">Occupation</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.occupation}\n                                    onChange={this.handleSelect('occupation')}\n                                    inputProps={{\n                                        name: 'occupation',\n                                        id: 'filterOccupation',\n                                    }}\n                                >\n                                    <MenuItem value={'m17'}>All</MenuItem>\n                                    <MenuItem value={'m1'}>Admin</MenuItem>\n                                    <MenuItem value={'m2'}>Arts</MenuItem>\n                                    <MenuItem value={'m3'}>Business/Finance</MenuItem>\n                                    <MenuItem value={'m4'}>Executive</MenuItem>\n                                    <MenuItem value={'m5'}>Government</MenuItem>\n                                    <MenuItem value={'m6'}>Healthcare</MenuItem>\n                                    <MenuItem value={'m7'}>IT</MenuItem>\n                                    <MenuItem value={'m8'}>Legal</MenuItem>\n                                    <MenuItem value={'m9'}>Manufacturing</MenuItem>\n                                    <MenuItem value={'m10'}>Sales</MenuItem>\n                                    <MenuItem value={'m11'}>Service</MenuItem>\n                                    <MenuItem value={'m12'}>Student - College</MenuItem>\n                                    <MenuItem value={'m13'}>Student - Grad School</MenuItem>\n                                    <MenuItem value={'m14'}>Student - High School</MenuItem>\n                                    <MenuItem value={'m15'}>Unemployed</MenuItem>\n                                    <MenuItem value={'m16'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterRelationship\">Relationship</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.relationship}\n                                    onChange={this.handleSelect('relationship')}\n                                    inputProps={{\n                                        name: 'relationship',\n                                        id: 'filterRelationship',\n                                    }}\n                                >\n                                    <MenuItem value={'n6'}>All</MenuItem>\n                                    <MenuItem value={'n1'}>Divorced</MenuItem>\n                                    <MenuItem value={'n2'}>Married</MenuItem>\n                                    <MenuItem value={'n3'}>Separated</MenuItem>\n                                    <MenuItem value={'n4'}>Single</MenuItem>\n                                    <MenuItem value={'n5'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl>\n                                <InputLabel htmlFor=\"filterReligion\">Religion</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.religion}\n                                    onChange={this.handleSelect('religion')}\n                                    inputProps={{\n                                        name: 'religion',\n                                        id: 'filterReligion',\n                                    }}\n                                >\n                                    <MenuItem value={'o11'}>All</MenuItem>\n                                    <MenuItem value={'o1'}>Agnosticism</MenuItem>\n                                    <MenuItem value={'o2'}>Atheism</MenuItem>\n                                    <MenuItem value={'o3'}>Buddhism</MenuItem>\n                                    <MenuItem value={'o4'}>Christianity</MenuItem>\n                                    <MenuItem value={'o5'}>Hindu</MenuItem>\n                                    <MenuItem value={'o6'}>Islam</MenuItem>\n                                    <MenuItem value={'o7'}>Judaism</MenuItem>\n                                    <MenuItem value={'o8'}>Mormonism</MenuItem>\n                                    <MenuItem value={'o9'}>Sikhism</MenuItem>\n                                    <MenuItem value={'o10'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </form>\n                    </div>\n                </Drawer>\n            </div>\n\n            //     </ExpansionPanelDetails>\n            // </ExpansionPanel>\n        );\n    }\n}\n\nexport default SKUFilter;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport logo from '../../assets/logo/yak-logo-fullbody.svg';\nimport MaterialIcon from 'material-icons-react';\nimport SKUFilter from '../tools/skuFilter';\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\n\n\nclass Sidebar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            subConversion: false,\n            subTimeframe: false,\n        };\n    }\n\n    toggleHidden = name => event => {\n        console.log(name, !this.state[name]);\n        this.setState({\n            [name]: !this.state[name]\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"sidebarComponent\" style={{width: '200px !important'}}>\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                <h1 className=\"App-title\">YAK</h1>\n\n                <hr/>\n\n                <ul style={{listStyleType: \"none\", paddingLeft: 0, textAlign: 'left', color: \"#fff\"}}>\n                    <Link to=\"/help\">\n                        <Tooltip title=\"HELP!\" placement=\"bottom\">\n                            <li style={{paddingLeft: 25}}>\n                                <MaterialIcon icon='error' color='#EEEEEE'/> Help Section\n                            </li>\n                        </Tooltip>\n                    </Link>\n                    <Link to=\"/export\">\n                        <Tooltip title=\"Reports & Exports\" placement=\"bottom\">\n                            <li style={{paddingLeft: 25}}>\n                                <MaterialIcon icon='timeline' color='#EEEEEE'/> Report/Export\n                            </li>\n                        </Tooltip>\n                    </Link>\n                    <Tooltip title=\"Timeframe Show/Hide\" placement=\"bottom\">\n                        <li style={{paddingLeft: 25, cursor: \"pointer\"}} onClick={this.toggleHidden(\"subTimeframe\")}>\n                            <span style={{verticalAlign: \"sub\"}}><MaterialIcon icon='calendar_today' color='#EEEEEE'/> </span>\n                            Timeframe\n                        </li>\n                    </Tooltip>\n                    {this.state.subTimeframe && <ul className=\"sidebarSubNav\">\n                        <Link to=\"/timeframe\">\n                            <li>Summary</li>\n                        </Link>\n                        <Link to=\"/timeframe\">\n                            <li>Last Week</li>\n                        </Link>\n                        <Link to=\"/timeframe\">\n                            <li>Last Month</li>\n                        </Link>\n                    </ul>}\n                    <Link to=\"/touch\">\n                        <Tooltip title=\"Touches led to Conversions\" placement=\"bottom\">\n                            <li style={{paddingLeft: 25}}>\n                                <MaterialIcon icon='touch_app' color='#EEEEEE'/> Touch\n                            </li>\n                        </Tooltip>\n                    </Link>\n\n                    <Tooltip title=\"Conversion Show/Hide\" placement=\"bottom\">\n                        <li style={{paddingLeft: 25, cursor: \"pointer\"}} onClick={this.toggleHidden(\"subConversion\")}>\n                            <span style={{verticalAlign: \"sub\"}}><MaterialIcon icon='how_to_reg' color='#EEEEEE'/> </span>\n                            Conversions\n                        </li>\n                    </Tooltip>\n                    {this.state.subConversion && <ul className=\"sidebarSubNav\">\n                        <Link to=\"/conversion/\">\n                            <li>Summary</li>\n                        </Link>\n                        <Link to=\"/conversion/path\">\n                            <li>Path</li>\n                        </Link>\n                    </ul>}\n\n                    <Link to=\"/geo\">\n                        <Tooltip title=\"Geo Data\" placement=\"bottom\">\n                            <li style={{paddingLeft: 25}}>\n                                <MaterialIcon icon='map' color='#EEEEEE'/> Map\n                            </li>\n                        </Tooltip>\n                    </Link>\n                    <Link to=\"/behavior\">\n                        <Tooltip title=\"User Behavior & Jumping\" placement=\"bottom\">\n                            <li style={{paddingLeft: 25}}>\n                                <MaterialIcon icon='face' color='#EEEEEE'/> Behavior\n                            </li>\n                        </Tooltip>\n                    </Link>\n                    <Link to=\"/audience\">\n                        <Tooltip title=\"Audience type & SKU mapping\" placement=\"bottom\">\n                            <li style={{paddingLeft: 25}}>\n                                <MaterialIcon icon='assignment' color='#EEEEEE'/> Audience/SKU\n                            </li>\n                        </Tooltip>\n                    </Link>\n                    <Link to=\"/lob\">\n                        <Tooltip title=\"Line of Business/Facility Type\" placement=\"bottom\">\n                            <li style={{paddingLeft: 25}}>\n                                <MaterialIcon icon='business' color='#EEEEEE'/> LOB\n                            </li>\n                        </Tooltip>\n                    </Link>\n\n\n                </ul>\n\n                <div className=\"sidebarBottom\">\n                    <hr/>\n                    <SKUFilter selected={this.props.selected} onUpdate={this.props.onUpdate}\n                               rightDrawer={this.props.rightDrawer}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\n// core components\nimport tableStyle from \"../../assets/css/material-dashboard.css\";\n\nfunction CustomTable({ ...props }) {\n  const { classes, tableHead, tableData, tableHeaderColor } = props;\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tableData.map((prop, key) => {\n            return (\n              <TableRow key={key}>\n                {prop.map((prop, key) => {\n                  return (\n                    <TableCell className={classes.tableCell} key={key}>\n                      {prop}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\n\nCustomTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  tableHeaderColor: PropTypes.oneOf([\n      \"prime\",\n      \"mint\",\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n\nexport default withStyles(tableStyle)(CustomTable);\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// @material-ui/icons\n\nconst cardStyle = {\n  card: {\n    border: \"0\",\n    marginBottom: \"20px\",\n    marginTop: \"20px\",\n    borderRadius: \"6px\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    background: \"#fff\",\n    width: \"90%\",\n    boxShadow: \"0 1px 4px 0 rgba(0, 0, 0, 0.14)\",\n    position: \"relative\",\n    display: \"inline-flex\",\n    flexDirection: \"column\",\n    wordWrap: \"break-word\",\n    fontSize: \".875rem\",\n      padding: \"6px\",\n  },\n  cardPlain: {\n    background: \"transparent\",\n    boxShadow: \"none\"\n  },\n  cardProfile: {\n    marginTop: \"20px\",\n    textAlign: \"center\"\n  },\n  cardChart: {\n    \"& p\": {\n      marginTop: \"0px\",\n      paddingTop: \"0px\"\n    }\n  }\n};\n\nfunction Card({ ...props }) {\n  const {\n    classes,\n    className,\n    children,\n    plain,\n    profile,\n    chart,\n    ...rest\n  } = props;\n  const cardClasses = classNames({\n    [classes.card]: true,\n    [classes.cardPlain]: plain,\n    [classes.cardProfile]: profile,\n    [classes.cardChart]: chart,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  chart: PropTypes.bool\n};\n\nexport default withStyles(cardStyle)(Card);\n","/*!\n\n =========================================================\n * Material Dashboard React - v1.3.0 based on Material Dashboard - v1.2.0\n =========================================================\n\n * Product Page: http://www.creative-tim.com/product/material-dashboard-react\n * Copyright 2018 Creative Tim (http://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\n// ##############################\n// // // Variables - Styles that are used on more than one component\n// #############################\n\nconst drawerWidth = 260;\n\nconst transition = {\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\n};\n\nconst container = {\n  paddingRight: \"15px\",\n  paddingLeft: \"15px\",\n  marginRight: \"auto\",\n  marginLeft: \"auto\"\n};\n\nconst boxShadow = {\n  boxShadow:\n    \"0 10px 30px -12px rgba(0, 0, 0, 0.42), 0 4px 25px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\"\n};\n\nconst card = {\n  display: \"inline-block\",\n  position: \"relative\",\n  width: \"100%\",\n  margin: \"25px 0\",\n  boxShadow: \"0 1px 4px 0 rgba(0, 0, 0, 0.14)\",\n  borderRadius: \"3px\",\n  color: \"rgba(0, 0, 0, 0.87)\",\n  background: \"#fff\"\n};\n\nconst defaultFont = {\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  fontWeight: \"300\",\n  lineHeight: \"1.5em\"\n};\n\nconst primeColor = \"#3949AB\";\nconst mintColor = \"#00BFA5\";\nconst primaryColor = \"#9c27b0\";\nconst warningColor = \"#ff9800\";\nconst dangerColor = \"#f44336\";\nconst successColor = \"#4caf50\";\nconst infoColor = \"#00acc1\";\nconst roseColor = \"#e91e63\";\nconst grayColor = \"#999999\";\n\nconst primeBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(57, 77, 171, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(57, 77, 171, 0.2)\"\n};\nconst mintBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(0, 188, 212, 0.14), 0 4px 20px 0px rgba(0, 188, 212, 0.2), 0 7px 8px -5px rgba(0, 188, 212, 0.12)\"\n};\nconst primaryBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(156, 39, 176, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(156, 39, 176, 0.2)\"\n};\nconst infoBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(0, 188, 212, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(0, 188, 212, 0.2)\"\n};\nconst successBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(76, 175, 80, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(76, 175, 80, 0.2)\"\n};\nconst warningBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(255, 152, 0, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(255, 152, 0, 0.2)\"\n};\nconst dangerBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(244, 67, 54, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(244, 67, 54, 0.2)\"\n};\nconst roseBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0px rgba(0, 0, 0, 0.14), 0 7px 10px -5px rgba(233, 30, 99, 0.4)\"\n};\n\nconst primeCardHeader = {\n  background: \"linear-gradient(60deg, #3949AB, #5C6BC0)\",\n  ...primeBoxShadow\n};\nconst mintCardHeader = {\n  background: \"linear-gradient(60deg, #00BFA5, #68EFAD)\",\n  ...mintBoxShadow\n};\nconst warningCardHeader = {\n  background: \"linear-gradient(60deg, #ffa726, #fb8c00)\",\n  ...warningBoxShadow\n};\nconst successCardHeader = {\n  background: \"linear-gradient(60deg, #66bb6a, #43a047)\",\n  ...successBoxShadow\n};\nconst dangerCardHeader = {\n  background: \"linear-gradient(60deg, #ef5350, #e53935)\",\n  ...dangerBoxShadow\n};\nconst infoCardHeader = {\n  background: \"linear-gradient(60deg, #26c6da, #00acc1)\",\n  ...infoBoxShadow\n};\nconst primaryCardHeader = {\n  background: \"linear-gradient(60deg, #ab47bc, #8e24aa)\",\n  ...primaryBoxShadow\n};\nconst roseCardHeader = {\n  background: \"linear-gradient(60deg, #ec407a, #d81b60)\",\n  ...roseBoxShadow\n};\n\nconst cardActions = {\n  margin: \"0 20px 10px\",\n  paddingTop: \"10px\",\n  borderTop: \"1px solid #eeeeee\",\n  height: \"auto\",\n  ...defaultFont\n};\n\nconst cardHeader = {\n  margin: \"-20px 15px 0\",\n  borderRadius: \"3px\",\n  padding: \"15px\"\n};\n\nconst defaultBoxShadow = {\n  border: \"0\",\n  borderRadius: \"3px\",\n  boxShadow:\n    \"0 10px 20px -12px rgba(0, 0, 0, 0.42), 0 3px 20px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\",\n  padding: \"10px 0\",\n  transition: \"all 150ms ease 0s\"\n};\n\nconst title = {\n  color: \"#3C4858\",\n  textDecoration: \"none\",\n  fontWeight: \"300\",\n  marginTop: \"30px\",\n  marginBottom: \"25px\",\n  minHeight: \"32px\",\n  fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n  \"& small\": {\n    color: \"#777\",\n    fontSize: \"65%\",\n    fontWeight: \"400\",\n    lineHeight: \"1\"\n  }\n};\n\nconst cardTitle = {\n  ...title,\n  marginTop: \"0\",\n  marginBottom: \"3px\",\n  minHeight: \"auto\",\n  \"& a\": {\n    ...title,\n    marginTop: \".625rem\",\n    marginBottom: \"0.75rem\",\n    minHeight: \"auto\"\n  }\n};\n\nconst cardSubtitle = {\n  marginTop: \"-.375rem\"\n};\n\nconst cardLink = {\n  \"& + $cardLink\": {\n    marginLeft: \"1.25rem\"\n  }\n};\n\nexport {\n  //variables\n  drawerWidth,\n  transition,\n  container,\n  boxShadow,\n  card,\n  defaultFont,\n  primeColor, mintColor,\n  primaryColor,\n  warningColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n  primeBoxShadow, mintBoxShadow,\n  primaryBoxShadow,\n  infoBoxShadow,\n  successBoxShadow,\n  warningBoxShadow,\n  dangerBoxShadow,\n  roseBoxShadow,\n  primeCardHeader, mintCardHeader,\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  cardActions,\n  cardHeader,\n  defaultBoxShadow,\n  title,\n  cardTitle,\n  cardSubtitle,\n  cardLink\n};\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// @material-ui/icons\n\nimport {\n  primeCardHeader, mintCardHeader,\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n} from '../../../assets/material-dashboard-react.jsx';\nconst cardHeaderStyle = {\n  cardHeader: {\n    padding: \"0.75rem 1.25rem\",\n    marginBottom: \"0\",\n    borderBottom: \"none\",\n    background: \"transparent\",\n    zIndex: \"3 !important\",\n    \"&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$primeCardHeader,&$mintCardHeader,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      margin: \"0 15px\",\n      padding: \"0\",\n      position: \"relative\",\n      color: \"#FFFFFF\"\n    },\n    \"&:first-child\": {\n      borderRadius: \"calc(.25rem - 1px) calc(.25rem - 1px) 0 0\"\n    },\n    \"&$primeCardHeader,&$mintCardHeader,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      \"&:not($cardHeaderIcon)\": {\n        borderRadius: \"3px\",\n        marginTop: \"-20px\",\n        padding: \"15px\"\n      }\n    },\n    \"&$cardHeaderStats svg\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      textAlign: \"center\",\n      width: \"36px\",\n      height: \"36px\",\n      margin: \"10px 10px 4px\"\n    },\n    \"&$cardHeaderStats i\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      width: \"56px\",\n      height: \"56px\",\n      textAlign: \"center\"\n    },\n    \"&$cardHeaderStats$cardHeaderIcon\": {\n      textAlign: \"right\"\n    }\n  },\n  cardHeaderPlain: {\n    marginLeft: \"0px !important\",\n    marginRight: \"0px !important\"\n  },\n  cardHeaderStats: {\n    \"& $cardHeaderIcon\": {\n      textAlign: \"right\"\n    },\n    \"& h1,& h2,& h3,& h4,& h5,& h6\": {\n      margin: \"0 !important\"\n    }\n  },\n  cardHeaderIcon: {\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      background: \"transparent\",\n      boxShadow: \"none\"\n    },\n    \"& i\": {\n      width: \"33px\",\n      height: \"33px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\"\n    },\n    \"& svg\": {\n      width: \"24px\",\n      height: \"24px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\",\n      margin: \"5px 4px 0px\"\n    }\n  },\n  primeCardHeader: {\n    color: \"#FFFFFF\",\n    \"&:not($cardHeaderIcon)\": {\n      ...primeCardHeader\n    }\n  },\n  mintCardHeader: {\n    color: \"#FFFFFF\",\n    \"&:not($cardHeaderIcon)\": {\n      ...mintCardHeader\n    }\n  },\n  warningCardHeader: {\n    color: \"#FFFFFF\",\n    \"&:not($cardHeaderIcon)\": {\n      ...warningCardHeader\n    }\n  },\n  successCardHeader: {\n    color: \"#FFFFFF\",\n    \"&:not($cardHeaderIcon)\": {\n      ...successCardHeader\n    }\n  },\n  dangerCardHeader: {\n    color: \"#FFFFFF\",\n    \"&:not($cardHeaderIcon)\": {\n      ...dangerCardHeader\n    }\n  },\n  infoCardHeader: {\n    color: \"#FFFFFF\",\n    \"&:not($cardHeaderIcon)\": {\n      ...infoCardHeader\n    }\n  },\n  primaryCardHeader: {\n    color: \"#FFFFFF\",\n    \"&:not($cardHeaderIcon)\": {\n      ...primaryCardHeader\n    }\n  },\n  roseCardHeader: {\n    color: \"#FFFFFF\",\n    \"&:not($cardHeaderIcon)\": {\n      ...roseCardHeader\n    }\n  }\n};\n\nfunction CardHeader({ ...props }) {\n  const {\n    classes,\n    className,\n    children,\n    color,\n    plain,\n    stats,\n    icon,\n    ...rest\n  } = props;\n  const cardHeaderClasses = classNames({\n    [classes.cardHeader]: true,\n    [classes[color + \"CardHeader\"]]: color,\n    [classes.cardHeaderPlain]: plain,\n    [classes.cardHeaderStats]: stats,\n    [classes.cardHeaderIcon]: icon,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardHeaderClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    \"prime\",\n    \"mint\",\n    \"warning\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"primary\",\n    \"rose\"\n  ]),\n  plain: PropTypes.bool,\n  stats: PropTypes.bool,\n  icon: PropTypes.bool\n};\n\nexport default withStyles(cardHeaderStyle)(CardHeader);\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// @material-ui/icons\n\n\nconst cardBodyStyle = {\n  cardBody: {\n    padding: \"0.9375rem 20px\",\n    flex: \"1 1 auto\",\n    WebkitBoxFlex: \"1\",\n    position: \"relative\"\n  },\n  cardBodyPlain: {\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\"\n  },\n  cardBodyProfile: {\n    marginTop: \"15px\"\n  }\n};\n\nfunction CardBody({ ...props }) {\n  const { classes, className, children, plain, profile, ...rest } = props;\n  const cardBodyClasses = classNames({\n    [classes.cardBody]: true,\n    [classes.cardBodyPlain]: plain,\n    [classes.cardBodyProfile]: profile,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardBodyClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardBody.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool\n};\n\nexport default withStyles(cardBodyStyle)(CardBody);\n","import React, {Component} from \"react\";\nimport {ResponsivePie} from 'nivo';\nimport CardHeader from \"../../tools/Card/CardHeader\";\nimport CardBody from \"../../tools/Card/CardBody\";\nimport Card from \"../../tools/Card/Card\";\n\nexport default class NivoPie extends Component {\n    constructor(props) {\n        super(props);\n        //let today = new Date();\n\n        // // Retrieve local store\n        // let yakPak = toolbox.retrievePak();\n        // let toDate = new Date(yakPak.DateFrame.To);\n        //\n        // let tempLabels = [];\n        //\n        // // Generate date labels starting with 'toDate' and iterating back through length of data\n        // for (let i = 0; i < this.props.chartCallData.length; i++) {\n        //     // parse date for how many days prior\n        //     let temp = new Date();\n        //     temp.setDate(toDate.getDate() - i);\n        //     tempLabels.unshift((toDate.getUTCMonth() + 1) + \"/\" + temp.getDate());\n        // }\n\n        this.state = {\n            chartData: [\n                {\n                    \"id\": \"Direct\",\n                    \"label\": \"Direct\",\n                    \"value\": 425,\n                    \"color\": \"hsl(41, 70%, 50%)\"\n                },\n                {\n                    \"id\": \"Email\",\n                    \"label\": \"Email\",\n                    \"value\": 180,\n                    \"color\": \"hsl(215, 70%, 50%)\"\n                },\n                {\n                    \"id\": \"Organic\",\n                    \"label\": \"Organic\",\n                    \"value\": 539,\n                    \"color\": \"hsl(177, 70%, 50%)\"\n                },\n                {\n                    \"id\": \"Paid Advertising\",\n                    \"label\": \"Paid Advertising\",\n                    \"value\": 292,\n                    \"color\": \"hsl(110, 70%, 50%)\"\n                },\n                {\n                    \"id\": \"Referring\",\n                    \"label\": \"Referring\",\n                    \"value\": 317,\n                    \"color\": \"hsl(135, 70%, 50%)\"\n                }\n            ]\n        }\n    }\n\n    render() {\n        let nivoData = this.state.chartData;\n        let propsColor = this.props.color;\n        let title = this.props.title;\n\n        return (\n            <Card className=\"nivoCard\" style={{width: '45%'}}>\n                <CardHeader color={propsColor}>\n                    <h4 className=\"nivoCardTitle\">{title}</h4>\n                </CardHeader>\n                <CardBody>\n                    <div className=\"nivoGraph\">\n                        <ResponsivePie\n                            data={nivoData}\n                            margin={{\n                                \"top\": 40,\n                                \"right\": 80,\n                                \"bottom\": 80,\n                                \"left\": 80\n                            }}\n                            innerRadius={0.5}\n                            padAngle={0.7}\n                            cornerRadius={3}\n                            colors=\"set1\"\n                            colorBy=\"id\"\n                            borderWidth={1}\n                            borderColor=\"inherit:darker(0.2)\"\n                            radialLabelsSkipAngle={10}\n                            radialLabelsTextXOffset={6}\n                            radialLabelsTextColor=\"#333333\"\n                            radialLabelsLinkOffset={0}\n                            radialLabelsLinkDiagonalLength={16}\n                            radialLabelsLinkHorizontalLength={24}\n                            radialLabelsLinkStrokeWidth={1}\n                            radialLabelsLinkColor=\"inherit\"\n                            slicesLabelsSkipAngle={10}\n                            slicesLabelsTextColor=\"#333333\"\n                            animate={true}\n                            motionStiffness={90}\n                            motionDamping={15}\n                            legends={[\n                                {\n                                    \"anchor\": \"bottom\",\n                                    \"direction\": \"row\",\n                                    \"translateY\": 56,\n                                    \"itemWidth\": 100,\n                                    \"itemHeight\": 18,\n                                    \"itemTextColor\": \"#999\",\n                                    \"symbolSize\": 18,\n                                    \"symbolShape\": \"circle\",\n                                    \"effects\": [\n                                        {\n                                            \"on\": \"hover\",\n                                            \"style\": {\n                                                \"itemTextColor\": \"#000\"\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]}\n                        />\n                    </div>\n                </CardBody>\n            </Card>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport {Bar} from 'react-chartjs-2';\nimport toolbox from \"../../tools/toolbox\";\nimport moment from 'moment';\nimport Button from \"@material-ui/core/Button/Button\";\n\nexport class LineChart extends Component {\n    constructor(props) {\n        super(props);\n\n        // Retrieve local store\n        let yakPak = toolbox.retrievePak();\n        let toDate = new Date(yakPak.DateFrame.To);\n        let startDay = moment(yakPak.DateFrame.From);\n        let endDay = moment(yakPak.DateFrame.To);\n        let numbDays = endDay.diff(startDay, 'days');\n\n        let primaryLabels = [];\n\n        // Generate date labels starting with 'toDate' and iterating back through length of data\n        for (let i = -1; i < numbDays; i++) {\n            // parse date for how many days prior\n            let temp = new Date();\n            temp.setDate(toDate.getDate() - i);\n            primaryLabels.unshift((toDate.getUTCMonth() + 1) + \"/\" + temp.getDate());\n        }\n\n        this.state = {\n            chartData: {\n                labels: primaryLabels,\n                datasets: [\n                    {\n                        label: \"Directories\",\n                        backgroundColor: 'rgb(78,175,74)',\n                        borderColor: '#4EAF4A',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],  // chart data comes from props in domain-card\n                        stack: 1,\n                    },\n                    {\n                        label: \"Internal Directories\",\n                        backgroundColor: '#377EB8',\n                        borderColor: '#377EB8',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Lead Gen\",\n                        backgroundColor: '#FF6F00',\n                        borderColor: '#FF6F00',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Other\",\n                        backgroundColor: '#AF1B3F',\n                        borderColor: '#AF1B3F',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Placement\",\n                        backgroundColor: '#963484',\n                        borderColor: '#963484',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Search\",\n                        backgroundColor: '#FFD600',\n                        borderColor: '#FFD600',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Search Engine\",\n                        backgroundColor: '#73FBD3',\n                        borderColor: '#73FBD3',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Sign Up\",\n                        backgroundColor: '#80A1C1',\n                        borderColor: '#80A1C1',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Social\",\n                        backgroundColor: '#FF4081',\n                        borderColor: '#FF4081',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Sponsorship\",\n                        backgroundColor: '#B388FF',\n                        borderColor: '#B388FF',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Directories\",\n                        backgroundColor: 'rgb(78,175,74, 0.2)',\n                        borderColor: 'rgb(78,175,74, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Internal Directories\",\n                        backgroundColor: 'rgb(55,126,184, 0.2)',\n                        borderColor: 'rgb(55,126,184, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Lead Gen\",\n                        backgroundColor: 'rgb(255,111,0, 0.2)',\n                        borderColor: 'rgb(255,111,0, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Other\",\n                        backgroundColor: 'rgb(175,27,63, 0.2)',\n                        borderColor: 'rgb(175,27,63, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Placement\",\n                        backgroundColor: 'rgb(150,52,132, 0.2)',\n                        borderColor: 'rgb(150,52,132, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Search\",\n                        backgroundColor: 'rgb(128,161,193, 0.2)',\n                        borderColor: 'rgb(128,161,193, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Search Engine\",\n                        backgroundColor: 'rgb(255,214,0, 0.2)',\n                        borderColor: 'rgb(255,214,0, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Sign Up\",\n                        backgroundColor: 'rgb(115,251,211, 0.2)',\n                        borderColor: 'rgb(115,251,211, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Social\",\n                        backgroundColor: 'rgb(255,64,129, 0.2)',\n                        borderColor: 'rgb(255,64,129, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Sponsorship\",\n                        backgroundColor: 'rgb(179,136,255, 0.2)',\n                        borderColor: 'rgb(179,136,255, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        data: [125, 140, 130, 160, 110, 150, 140, 120],\n                        type: 'line',\n                        label: 'Calls',\n                        fill: false,\n                        backgroundColor: \"#fff\",\n                        borderColor: \"#737373\",\n                        borderCapStyle: 'butt',\n                        borderDash: [10, 10],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        lineTension: .3,\n                        pointBackgroundColor: \"#fff\",\n                        pointBorderColor: \"#737373\",\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: \"#737373\",\n                        pointHoverBorderColor: \"#737373\",\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 4,\n                        pointHitRadius: 10\n                    },\n                ]\n            },\n            chartOptions: {\n                tooltips: {\n                    titleFontSize: 0,\n                    titleSpacing: 0,\n                    callbacks: {\n                        label: function(tooltipItem, data) {\n                            let label = data.datasets[tooltipItem.datasetIndex].label + ' ' +\n                                data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].pointLabel;\n                            return label + ': (' + tooltipItem.yLabel + ')';\n                        }\n                    }\n                },\n                //responsive: true,\n                scales: {\n                    xAxes: [{\n                        scaleLabel: {\n                            display: !!this.props.chartOptions.xName,  // coercion to bool, true if it exists\n                            labelString: this.props.chartOptions.xName\n                        },\n                        time: {\n                            unit: 'day',\n                            displayFormats: {\n                                quarter: 'MMM D'\n                            }\n                        },\n                        distribution: 'series',\n                    }],\n                    yAxes: [{\n                        stacked: true,\n                        scaleLabel: {\n                            display: !!this.props.chartOptions.yName,  // coercion to bool, true if it exists\n                            labelString: this.props.chartOptions.yName\n                        },\n                        ticks: {\n                            beginAtZero: true,\n                        }\n                    }]\n                }\n            }\n        };\n\n        this.calculateDateRange();\n    }\n\n    // Grab the current stored date frame and label chart data\n    calculateDateRange = () => {\n        let yakPak = toolbox.retrievePak();\n\n        // Check if we have comparison dates\n        if (yakPak.DateFrame.CompareFrom !== '' && yakPak.DateFrame.CompareTo !== '') {\n            let compareToDate = new Date(yakPak.DateFrame.CompareTo);\n            let compareStartDay = moment(yakPak.DateFrame.CompareFrom);\n            let compareEndDay = moment(yakPak.DateFrame.CompareTo);\n            let compareNumbDays = compareEndDay.diff(compareStartDay, 'days');\n\n            let tempLabels = [];\n\n            for (let i = -1; i < compareNumbDays; i++) {\n                // parse date for how many days prior\n                let temp = new Date();\n                temp.setDate(compareToDate.getDate() - i);\n                tempLabels.unshift((compareToDate.getUTCMonth() + 1) + \"/\" + temp.getDate());\n            }\n\n            // Populate data with comparison dates\n            this.populateData(this.state.chartData.labels, tempLabels);\n        } else {\n            this.populateData(this.state.chartData.labels);\n        }\n    };\n\n    // Pass in calculated date labels, assign them to\n    populateData = (dateLabels, compareLabels = null) => {\n        let tempObj = this.state.chartData;\n        let datasets = this.state.chartData.datasets.length;\n        console.log(datasets);\n\n        for (let i = 0; i < dateLabels.length; i++) {\n            for (let j = 0; j < datasets-1; j++) {\n                tempObj.datasets[j].data[i] = {\n                    \"x\": dateLabels[i],\n                    \"y\": Math.floor(Math.random() * Math.floor(20)),\n                    \"pointLabel\": dateLabels[i]\n                };\n            }\n            // tempObj.datasets[0].data[i] = {\n            //     \"x\": dateLabels[i],\n            //     \"y\": Math.floor(Math.random() * Math.floor(150)),\n            //     \"pointLabel\": dateLabels[i]\n            // };\n            //\n            // tempObj.datasets[1].data[i] = {\n            //     \"x\": dateLabels[i],\n            //     \"y\": Math.floor(Math.random() * Math.floor(400)),\n            //     \"pointLabel\": dateLabels[i]\n            // };\n        }\n\n        console.log(tempObj);\n\n\n        // if (compareLabels != null) {\n        //     let SecIndex = this.state.chartData.datasets.length+1;\n        //     tempObj.datasets[SecIndex] = {\n        //         label: \"SEC Call\",\n        //         backgroundColor: '#C6FF00',\n        //         borderColor: '#C6FF00',\n        //         borderWidth: 2,\n        //         fill: false,\n        //         data: [],\n        //         stack: 2,\n        //     };\n        //\n        //     for (let i = 0; i < dateLabels.length; i++) {\n        //         tempObj.datasets[SecIndex].data[i] = {\n        //             \"x\": dateLabels[i],\n        //             \"y\": compareLabels[i] == null ? 0 : Math.floor(Math.random() * Math.floor(20)),\n        //             \"pointLabel\": compareLabels[i] == null ? \"Out of Range\" : compareLabels[i]\n        //         };\n        //     }\n        // }\n\n        let dummyOptions = this.state.chartOptions;\n        // Set state with fresh data\n        this.setState({\n            chartData: tempObj,\n            chartOptions: dummyOptions,\n        });\n    };\n\n    convertToDay = () => {\n\n    };\n\n    convertToWeek = () => {\n        let yakPak = toolbox.retrievePak();\n        let toDate = moment(yakPak.DateFrame.To);\n        let startDay = moment(yakPak.DateFrame.From);\n        let numbWeeks = toDate.diff(startDay, 'week') +1;  // Add 1 because it doesn't count starting week\n        console.log('Weeks: '+ numbWeeks);\n    };\n\n    convertToMonth = () => {\n        let yakPak = toolbox.retrievePak();\n        let toDate = moment(yakPak.DateFrame.To);\n        let startDay = moment(yakPak.DateFrame.From);\n        let numbMonths = toDate.diff(startDay, 'month') +1;  // Add 1 because it doesn't count starting month\n        console.log('Months: '+ numbMonths);\n    };\n\n    render() {\n        return (\n            <div className=\"reactChart\">\n                <div style={{paddingBottom: '20px', float: 'right'}}>\n                    <Button variant=\"outlined\" disabled color=\"secondary\">\n                        Day\n                    </Button>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={this.convertToWeek}>\n                        Week\n                    </Button>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={this.convertToMonth}>\n                        Month\n                    </Button>\n                </div>\n                <Bar\n                    data={this.state.chartData}\n                    options={this.state.chartOptions}\n                />\n            </div>\n        );\n    }\n}\n\nexport default LineChart;","import React, {Component} from 'react';\nimport Table from '../../tools/table.js';\nimport Card from '../../tools/Card/Card';\nimport CardHeader from \"../../tools/Card/CardHeader\";\nimport CardBody from '../../tools/Card/CardBody';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport NivoPie from \"./nivoPie\";\n//import moment from \"moment/moment\";\n//import MaterialIcon from 'material-icons-react';\nimport LineChart from './lineChart';\n\n\nconst styles = {\n    cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n        }\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n        }\n    },\n    cardConversionGraph: {\n        width: '90%',\n        margin: '0 6px',\n    },\n    cardConversionTable: {\n        overflowX: 'auto',\n    },\n};\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{padding: 8 * 3}}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass Conversion extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tabValue: this.props.parentState.Conversion.tabValue,\n        };\n    }\n\n\n\n    handleTabChange = (event, tabValue) => {\n        this.setState({tabValue});\n\n        this.props.updateDash('tabValue', tabValue);\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {tabValue} = this.state;\n\n        return (\n            <div className=\"conversionComponent\">\n                <h3>Conversion</h3>\n                <Tabs\n                    value={this.state.tabValue}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={this.handleTabChange}\n                    style={{display: 'inline-block'}}\n                >\n                    <Tab label=\"Summary\"/>\n                    <Tab label=\"Tables\"/>\n                    <Tab label=\"Graphs\"/>\n                </Tabs>\n\n                {tabValue === 0 && <TabContainer>\n                    <NivoPie color={\"prime\"} title={\"First Touch Summary\"} chartCallData={[11, 14, 13, 8, 10, 12]}/>\n                    <NivoPie color={\"info\"} title={\"Converting Touch Summary\"} chartCallData={[11, 14, 13, 8, 10, 12]}/>\n                    <NivoPie color={\"primary\"} title={\"Contributing Touch Summary\"}\n                             chartCallData={[11, 14, 13, 8, 10, 12]}/>\n                </TabContainer>}\n\n                {tabValue === 1 && <TabContainer>\n                    <Card>\n                        <CardHeader color=\"info\">\n                            <h4 className=\"cardTitleWhite\">Channel Performance</h4>\n                        </CardHeader>\n                        <CardBody className={classes.cardConversionTable}>\n                            <Table\n                                tableHeaderColor=\"info\"\n                                tableHead={[\n                                    \"Network\",\n                                    \"Total 5min\",\n                                    \"Total Call\",\n                                    \"Total 5min + Call\",\n                                    \"Last Touch 5min\",\n                                    \"Last Touch Call\",\n                                    \"Last Touch 5min + Call\",\n                                    \"1st Touch 5min\",\n                                    \"1st Touch Call\",\n                                    \"1st Touch 5min + Call\"\n                                ]}\n                                tableData={[\n                                    [\"Search\", \"1001\", \"16\", \"7\", \"2\", \"5\", \"2\", \"5\", \"2\", \"5\"],\n                                    [\"Display\", \"777\", \"11\", \"17\", \"9\", \"4\", \"1\", \"9\", \"7\", \"3\"],\n                                    [\"Social\", \"263\", \"8\", \"15\", \"1\", \"3\", \"2\", \"5\", \"2\", \"0\"],\n                                ]}\n                            />\n                        </CardBody>\n                    </Card>\n                </TabContainer>}\n\n                {tabValue === 2 && <TabContainer>\n                    <Card>\n                        <CardHeader color=\"prime\">\n                            <h4 className=\"cardTitleWhite\">Conversions (Medium)</h4>\n                        </CardHeader>\n                        <CardBody className={classes.cardConversionTable}>\n                            <LineChart chartOptions={{\n                                           dataLabel: 'Calls',\n                                           xName: 'Date',\n                                           yName: ''\n                                       }}/>\n                        </CardBody>\n                    </Card>\n                </TabContainer>}\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Conversion);","import React, {Component} from 'react';\nimport {Doughnut} from 'react-chartjs-2';\nimport Table from '../../tools/table.js';\nimport Card from '../../tools/Card/Card';\nimport CardHeader from \"../../tools/Card/CardHeader\";\nimport CardBody from '../../tools/Card/CardBody';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport moment from \"moment\";\n\nconst styles = {\n    cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n        }\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n        }\n    },\n    cardConversionGraph: {\n        width: '90%',\n        margin: '0 6px',\n    },\n    cardConversionTable: {\n        overflowX: 'auto',\n    },\n};\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{padding: 8 * 3}}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass ConversionPath extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tabValue: this.props.parentState.Conversion.tabValue,\n            timeToShow: moment().subtract(1, 'month').format('MMMM'),\n            topPieData: {\n                labels: [\n                    '1st',\n                    '2nd',\n                    '3rd',\n                    '4th',\n                    '5th'\n                ],\n                datasets: [{\n                    backgroundColor: [\"#4EAF4A\", \"#377EB8\",\"#FF6F00\",\"#AF1B3F\",\"#963484\"],\n                    data: [72,39,25,16,4]\n                }],\n            },\n            topPieOptions: {\n                title: {\n                    display: true,\n                    text: 'Top 5 Paths'\n                }\n            },\n            botPieData: {\n                labels: [\n                    '1st',\n                    '2nd',\n                    '3rd',\n                    '4th',\n                    '5th'\n                ],\n                datasets: [{\n                    backgroundColor: [\"#4EAF4A\", \"#377EB8\",\"#FF6F00\",\"#AF1B3F\",\"#963484\"],\n                    data: [72,39,25,16,4]\n                }],\n            },\n            botPieOptions: {\n                title: {\n                    display: true,\n                    text: 'Worst 5 Paths'\n                }\n            },\n        };\n    }\n\n\n    handleTabChange = (event, tabValue) => {\n        this.setState({tabValue});\n\n        this.props.updateDash('tabValue', tabValue);\n    };\n\n    render() {\n        const {classes} = this.props;\n        const timeFrameToShow = this.state.timeToShow;\n\n        return (\n            <div className=\"conversionComponent\">\n                <h3>Conversion Path</h3>\n                <Card>\n                    <CardHeader color=\"mint\">\n                        <h4 className=\"cardTitleWhite\">Top 5 Channel Paths - {timeFrameToShow}</h4>\n                    </CardHeader>\n                    <CardBody className={classes.cardConversionTable}>\n                        <Table\n                            tableHeaderColor=\"success\"\n                            tableHead={[\n                                \"\",\n                                \"First Touch\",\n                                \"Middle Touch\",\n                                \"Converting Touch\",\n                                \"\",\n                                \"Conversion Total\"\n                            ]}\n                            tableData={[\n                                [\"1st\", \"Organic - Google\", \"Direct\", \"Email\", \"=\", \"72\"],\n                                [\"2nd\", \"Referring\", \"Referring - Internal\", \"Referring - Other\", \"=\", \"39\"],\n                                [\"3rd\", \"Paid Advertising\", \"Organic - Other\", \"Email - Lead Gen\", \"=\", \"25\"],\n                                [\"4th\", \"Organic - Pinterest\", \"Email\", \"Direct\", \"=\", \"16\"],\n                                [\"5th\", \"Direct\", \"Organic - Other\", \"Email - Lead Gen\", \"=\", \"4\"],\n                            ]}\n                        />\n                        <Doughnut\n                            data={this.state.topPieData}\n                            options={this.state.topPieOptions}\n                        />\n                    </CardBody>\n                </Card>\n\n                <Card>\n                    <CardHeader color=\"danger\">\n                        <h4 className=\"cardTitleWhite\">Bottom 5 Channel Paths - {timeFrameToShow}</h4>\n                    </CardHeader>\n                    <CardBody className={classes.cardConversionTable}>\n                        <Table\n                            tableHeaderColor=\"danger\"\n                            tableHead={[\n                                \"\",\n                                \"First Touch\",\n                                \"Middle Touch\",\n                                \"Converting Touch\",\n                                \"\",\n                                \"Conversion Total\"\n                            ]}\n                            tableData={[\n                                [\"1st\", \"Organic - Google\", \"Direct\", \"Email\", \"=\", \"-72\"],\n                                [\"2nd\", \"Referring\", \"Referring - Internal\", \"Referring - Other\", \"=\", \"-39\"],\n                                [\"3rd\", \"Paid Advertising\", \"Organic - Other\", \"Email - Lead Gen\", \"=\", \"-25\"],\n                                [\"4th\", \"Organic - Pinterest\", \"Email\", \"Direct\", \"=\", \"-16\"],\n                                [\"5th\", \"Direct\", \"Organic - Other\", \"Email - Lead Gen\", \"=\", \"-4\"],\n                            ]}\n                        />\n                        <Doughnut\n                            data={this.state.botPieData}\n                            options={this.state.botPieOptions}\n                        />\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(ConversionPath);","import React from 'react';\nimport moment from 'moment';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Table from '../../tools/table.js';\nimport Card from '../../tools/Card/Card';\nimport CardHeader from \"../../tools/Card/CardHeader\";\nimport CardBody from '../../tools/Card/CardBody';\nimport MaterialIcon from 'material-icons-react';\n\n\nconst styles = {\n    cardCategoryWhite: {\n      \"&,& a,& a:hover,& a:focus\": {\n        color: \"rgba(255,255,255,.62)\",\n        margin: \"0\",\n        fontSize: \"14px\",\n        marginTop: \"0\",\n        marginBottom: \"0\"\n      },\n      \"& a,& a:hover,& a:focus\": {\n        color: \"#FFFFFF\"\n      }\n    },\n    cardTitleWhite: {\n      color: \"#FFFFFF\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontWeight: \"300\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\",\n      \"& small\": {\n        color: \"#777\",\n        fontSize: \"65%\",\n        fontWeight: \"400\",\n        lineHeight: \"1\"\n      }\n    }\n  };\n\nfunction ExportsTable(props) {\n    const { classes } = props;\n    return (\n        <div>\n            <Card>\n                <CardHeader color=\"mint\">\n                    <h4 className={classes.cardTitleWhite}>Export Status</h4>\n                </CardHeader>\n                <CardBody>\n                    <Table\n                    tableHeaderColor=\"primary\"\n                    tableHead={[\"Export Name\", \"\", \"Facility\", \"Options\", \"Email\", \"Time\"]}\n                    tableData={[\n                        [\"Bayside-Direct (5/1-5/31)\", <MaterialIcon icon='cloud_download' color='#00C853' />, \"Bayside Marin\", \"Direct,All,Google\", \"jon.snow@acadiahealthcare.com\", moment().format(\"lll\")],\n                        [\"All-Email-Other (6/19-6/20)\", <MaterialIcon icon='cloud_download' color='#00C853' />, \"All Facilities\", \"Email,Lead Gen,Other\", \"tyrion.lannister@acadiahealthcare.com\", moment().format(\"lll\")],\n                        [\"All-LinkedIn (6/10-6/17)\", <MaterialIcon icon='cloud_download' color='#00C853' />, \"All Facilities\", \"Organic,Social,LinkedIn\", \"little.finger@acadiahealthcare.com\", moment().format(\"lll\")],\n                        [\"Galax-PaidAd (5/1-7/1)\", <MaterialIcon icon='cloud_download' color='#00C853' />, \"Galax\", \"PaidAd,All,GDN\", \"eddard.stark@acadiahealthcare.com\", moment().format(\"lll\")],\n                    ]}\n                    />\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nexport default withStyles(styles)(ExportsTable);\n","import React, {Component} from 'react';\nimport ExportsTable from './exportsTable';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Card from '../../tools/Card/Card';\nimport CardHeader from '../../tools/Card/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\n\nconst styles = {\n    card: {\n        minWidth: 575,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    formControl: {\n        margin: '5px',\n        minWidth: 240,\n    },\n    cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n        }\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n        }\n    }\n};\n\nclass Export extends Component {\n\n    state = {\n        exportName: 'Sample Export',\n        exportEmail: 'sample@placeholder.com',\n        recurrence: '',\n        columns: [],\n        multiline: 'Controlled',\n        facility: [],\n        touch: '',\n        channel: '',\n        medium: '',\n        source: '',\n        disorderDetail: '',\n        targeting: '',\n        notes: '',\n        priority: '',\n        trigger: '',\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    handleSelect = event => {\n        this.setState({[event.target.name]: event.target.value});\n    };\n\n    render() {\n        const {classes} = this.props;\n        const currentExports = {};\n\n        return (\n            <div className=\"exportComponent\">\n                <h3>Export</h3>\n\n                <Card>\n                    <CardHeader color=\"mint\">\n                        <h4 className={classes.cardTitleWhite}>Start New Export</h4>\n                        <p className={classes.cardCategoryWhite}>Select options for export.</p>\n                    </CardHeader>\n                    <CardContent>\n\n                        <form className={classes.container} noValidate autoComplete=\"off\">\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"exportName\"\n                                    label=\"Export Name\"\n                                    className={classes.textField}\n                                    value={this.state.exportName}\n                                    onChange={this.handleChange('exportName')}\n                                    margin=\"normal\"\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"exportEmail\"\n                                    label=\"Your Email\"\n                                    className={classes.textField}\n                                    value={this.state.exportEmail}\n                                    onChange={this.handleChange('exportEmail')}\n                                    margin=\"normal\"\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"recurrence\">Recurrence</InputLabel>\n                                <Select\n                                    value={this.state.recurrence}\n                                    onChange={this.handleSelect}\n                                    label=\"Recurrence\"\n                                    inputProps={{\n                                        name: 'recurrence',\n                                        id: 'recurrence',\n                                    }}\n                                    autoWidth\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>None</em>\n                                    </MenuItem>\n                                    <MenuItem value={'weekly'}>Weekly</MenuItem>\n                                    <MenuItem value={'monthly'}>Monthly</MenuItem>\n                                </Select>\n                            </FormControl>\n\n                            <br/>\n\n                            <FormControl className={classes.formControl} style={{width: '80%'}}>\n                                <InputLabel htmlFor=\"columns\">Columns</InputLabel>\n                                <Select\n                                    multiple\n                                    value={this.state.columns}\n                                    onChange={this.handleSelect}\n                                    label=\"Columns\"\n                                    inputProps={{\n                                        name: 'columns',\n                                        id: 'columns',\n                                    }}\n                                    autoWidth\n                                >\n                                    <MenuItem value={'ip'}>IP</MenuItem>\n                                    <MenuItem value={'session'}>Session</MenuItem>\n                                    <MenuItem value={'passport'}>Passport</MenuItem>\n                                    <MenuItem value={'phone'}>Phone</MenuItem>\n                                    <MenuItem value={'datetime'}>Datetime</MenuItem>\n                                    <MenuItem value={'geo'}>Geo</MenuItem>\n                                    <MenuItem value={'sku'}>SKU</MenuItem>\n                                    <MenuItem value={'url'}>URL</MenuItem>\n                                    <MenuItem value={'touch'}>Touch</MenuItem>\n                                    <MenuItem value={'referrer'}>Referrer</MenuItem>\n                                    <MenuItem value={'source'}>Source</MenuItem>\n                                    <MenuItem value={'medium'}>Medium</MenuItem>\n                                    <MenuItem value={'facility'}>Facility</MenuItem>\n                                    <MenuItem value={'facilityType'}>Facility Type</MenuItem>\n                                </Select>\n                            </FormControl>\n\n                            <br/>\n\n                            {/*<FormControl className={classes.formControl}>*/}\n                                {/*<InputLabel htmlFor=\"facility\">Facility</InputLabel>*/}\n                                {/*<Select*/}\n                                    {/*multiple*/}\n                                    {/*value={this.state.facility}*/}\n                                    {/*onChange={this.handleSelect}*/}\n                                    {/*label=\"Facility\"*/}\n                                    {/*inputProps={{*/}\n                                        {/*name: 'facility',*/}\n                                        {/*id: 'facility',*/}\n                                    {/*}}*/}\n                                    {/*autoWidth*/}\n                                {/*>*/}\n                                    {/*<MenuItem value={'all'}>*/}\n                                        {/*<em>All</em>*/}\n                                    {/*</MenuItem>*/}\n                                    {/*<MenuItem value={'baysideMarin'}>Bayside Marin</MenuItem>*/}\n                                    {/*<MenuItem value={'acadiana'}>Acadiana</MenuItem>*/}\n                                    {/*<MenuItem value={'galax'}>Galax</MenuItem>*/}\n                                {/*</Select>*/}\n                            {/*</FormControl>*/}\n\n                            {/*<FormControl className={classes.formControl}>*/}\n                                {/*<InputLabel htmlFor=\"touch\">Touch</InputLabel>*/}\n                                {/*<Select*/}\n                                    {/*value={this.state.touch}*/}\n                                    {/*onChange={this.handleSelect}*/}\n                                    {/*label=\"Touch\"*/}\n                                    {/*inputProps={{*/}\n                                        {/*name: 'touch',*/}\n                                        {/*id: 'touch',*/}\n                                    {/*}}*/}\n                                    {/*autoWidth*/}\n                                {/*>*/}\n                                    {/*<MenuItem value=\"any\">*/}\n                                        {/*<em>Any</em>*/}\n                                    {/*</MenuItem>*/}\n                                    {/*<MenuItem value={'first'}>First</MenuItem>*/}\n                                    {/*<MenuItem value={'last'}>Last</MenuItem>*/}\n                                {/*</Select>*/}\n                            {/*</FormControl>*/}\n\n                            {/*<br/>*/}\n\n                            {/*<FormControl className={classes.formControl}>*/}\n                                {/*<InputLabel htmlFor=\"channel\">Channel</InputLabel>*/}\n                                {/*<Select*/}\n                                    {/*value={this.state.channel}*/}\n                                    {/*onChange={this.handleSelect}*/}\n                                    {/*label=\"Channel\"*/}\n                                    {/*inputProps={{*/}\n                                        {/*name: 'channel',*/}\n                                        {/*id: 'channel',*/}\n                                    {/*}}*/}\n                                {/*>*/}\n                                    {/*<MenuItem value={'all'}><em>All</em></MenuItem>*/}\n                                    {/*<MenuItem value={\"direct\"}>Direct</MenuItem>*/}\n                                    {/*<MenuItem value={'email'}>Email</MenuItem>*/}\n                                    {/*<MenuItem value={'organic'}>Organic</MenuItem>*/}\n                                    {/*<MenuItem value={'paid-advertising'}>Paid Advertising</MenuItem>*/}\n                                    {/*<MenuItem value={'referring'}>Referring</MenuItem>*/}\n                                {/*</Select>*/}\n                            {/*</FormControl>*/}\n\n                            {/*<FormControl className={classes.formControl}>*/}\n                                {/*<InputLabel htmlFor=\"medium\">Medium</InputLabel>*/}\n                                {/*<Select*/}\n                                    {/*value={this.state.medium}*/}\n                                    {/*onChange={this.handleSelect}*/}\n                                    {/*inputProps={{*/}\n                                        {/*name: 'medium',*/}\n                                        {/*id: 'medium',*/}\n                                    {/*}}*/}\n                                {/*>*/}\n                                    {/*<MenuItem value=\"\">*/}\n                                        {/*<em>None</em>*/}\n                                    {/*</MenuItem>*/}\n                                    {/*<MenuItem value={'all'}>All</MenuItem>*/}\n                                    {/*<MenuItem value={'directories'}>Directories</MenuItem>*/}\n                                    {/*<MenuItem value={'internal-directories'}>Internal Directories</MenuItem>*/}\n                                    {/*<MenuItem value={'lead-gen'}>Lead Gen</MenuItem>*/}\n                                    {/*<MenuItem value={'other'}>Other</MenuItem>*/}\n                                    {/*<MenuItem value={'placement'}>Placement</MenuItem>*/}\n                                    {/*<MenuItem value={'search'}>Search</MenuItem>*/}\n                                    {/*<MenuItem value={'search-engines'}>Search Engines</MenuItem>*/}\n                                    {/*<MenuItem value={'sign-up'}>Sign Up</MenuItem>*/}\n                                    {/*<MenuItem value={'social'}>Social</MenuItem>*/}\n                                    {/*<MenuItem value={'sponsorship'}>Sponsorship</MenuItem>*/}\n                                {/*</Select>*/}\n                            {/*</FormControl>*/}\n\n                            {/*<FormControl className={classes.formControl}>*/}\n                                {/*<InputLabel htmlFor=\"source\">Source</InputLabel>*/}\n                                {/*<Select*/}\n                                    {/*value={this.state.source}*/}\n                                    {/*onChange={this.handleSelect}*/}\n                                    {/*inputProps={{*/}\n                                        {/*name: 'source',*/}\n                                        {/*id: 'source',*/}\n                                    {/*}}*/}\n                                {/*>*/}\n                                    {/*<MenuItem value=\"\">*/}\n                                        {/*<em>None</em>*/}\n                                    {/*</MenuItem>*/}\n                                    {/*<MenuItem value={'all'}>All</MenuItem>*/}\n                                    {/*<MenuItem value={'directories'}>Directories</MenuItem>*/}\n                                    {/*<MenuItem value={'internal-directories'}>Internal Directories</MenuItem>*/}\n                                    {/*<MenuItem value={'lead-gen'}>Lead Gen</MenuItem>*/}\n                                    {/*<MenuItem value={'other'}>Other</MenuItem>*/}\n                                    {/*<MenuItem value={'placement'}>Placement</MenuItem>*/}\n                                    {/*<MenuItem value={'search'}>Search</MenuItem>*/}\n                                    {/*<MenuItem value={'search-engines'}>Search Engines</MenuItem>*/}\n                                    {/*<MenuItem value={'sign-up'}>Sign Up</MenuItem>*/}\n                                    {/*<MenuItem value={'social'}>Social</MenuItem>*/}\n                                    {/*<MenuItem value={'sponsorship'}>Sponsorship</MenuItem>*/}\n                                {/*</Select>*/}\n                            {/*</FormControl>*/}\n\n                        </form>\n\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={this.state.checkedB}\n                                    onChange={this.handleChange('checkedB')}\n                                    value=\"checkedB\"\n                                    color=\"secondary\"\n                                />\n                            }\n                            label=\"Use current filters\"\n                        />\n\n                    </CardContent>\n\n                    <CardActions style={{display: 'block'}}>\n                        <Button variant=\"contained\" color=\"primary\" style={{backgroundColor: '#00C853', color: '#ffffff'}} className=\"\">\n                            Start\n                        </Button>\n                    </CardActions>\n                </Card>\n                <br/>\n                <ExportsTable data={currentExports}/>\n            </div>\n        )\n    }\n}\n\nExport.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Export);","import React, {Component} from 'react';\n\nexport default class Settings extends Component {\n\n    render() {\n        return (\n            <div className=\"settingsComponent\">\n                <h3>Settings Component</h3>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport Select from \"@material-ui/core/Select/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport Button from \"@material-ui/core/Button/Button\";\n\n\nexport default class Builder extends Component {\n    constructor(props) {\n        super(props);\n\n        console.log(props.parentState);\n\n        this.state = {\n            Columns: this.props.parentState.Builder.Columns != null ? this.props.parentState.Builder.Columns : [],\n            Rows: [\n                {\n                    id: 1,\n                    name: 'Row Data'\n                },\n                {\n                    id: 2,\n                    name: 'Row Data'\n                },\n                {\n                    id: 3,\n                    name: 'Row Data'\n                },\n                {\n                    id: 4,\n                    name: 'Row Data'\n                }\n            ],\n        }\n    }\n\n    handleColumnSelect = name => event => {\n\n        this.setState({\n            Columns: event.target.value\n        });\n\n        // send update to main state\n        this.props.updateDash({\n            Columns: event.target.value\n        });\n    };\n\n    render() {\n        let rows = this.state.Rows;\n        let columns = this.state.Columns;\n\n        return (\n            <div className=\"builderComponent\">\n                <h3>Builder</h3>\n                <ExpansionPanel style={{width: '90%', margin: 'auto', borderRadius: '4px'}}>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}>\n                        <Typography>Control Panel</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails style={{display: 'inline-block'}}>\n                        <FormControl className=\"\">\n                            <InputLabel htmlFor=\"columnSelect\">Columns</InputLabel>\n                            <Select\n                                className=\"skuFilterSelect\"\n                                multiple\n                                value={this.state.Columns}\n                                onChange={this.handleColumnSelect('Columns')}\n                                inputProps={{\n                                    name: 'columns',\n                                    id: 'columnSelect',\n                                }}\n                            >\n                                <MenuItem value={'Facility'}>Facility</MenuItem>\n                                <MenuItem value={'Facility_Type'}>Facility Type</MenuItem>\n                                <MenuItem value={'Domain'}>Domain</MenuItem>\n                                <MenuItem value={'IP'}>IP</MenuItem>\n                                <MenuItem value={'Session'}>Session</MenuItem>\n                                <MenuItem value={'Passport'}>Passport</MenuItem>\n                                <MenuItem value={'Phone_Number'}>Phone Number</MenuItem>\n                                <MenuItem value={'Conversions'}>Conversions</MenuItem>\n                                <MenuItem value={'Conversion_Type'}>Conversion Type</MenuItem>\n                                <MenuItem value={'TOS'}>TOS</MenuItem>\n                                <MenuItem value={'Pageviews'}>Pageviews</MenuItem>\n                            </Select>\n                            <br/>\n                            <Button variant=\"contained\"\n                                    style={{backgroundColor: '#00C853', color: '#ffffff', margin: 'auto'}}>\n                                Pull\n                            </Button>\n                        </FormControl>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n\n                <br/>\n\n                <Paper style={{width: '90%', margin: 'auto'}}>\n                    <Table className=\"cardTable\">\n                        <TableHead>\n                            <TableRow>\n                                {columns.map(col => {\n                                    return (\n                                        <TableCell key={col}>{col}</TableCell>\n                                    );\n                                })}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map(row => {\n                                return (\n                                    <TableRow key={row.id}>\n                                        {columns.map(col => {\n                                            return (\n                                                <TableCell key={col}>{row.id} data for {col}</TableCell>\n                                            );\n                                        })}\n                                    </TableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport CardHeader from \"../../tools/Card/CardHeader\";\nimport CardBody from \"../../tools/Card/CardBody\";\nimport Table from \"../../tools/table\";\nimport Card from \"../../tools/Card/Card\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport Select from \"@material-ui/core/Select/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport Grid from '@material-ui/core/Grid';\nimport MaterialIcon from \"material-icons-react\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\nclass Stalker extends Component {\n\n    state = {\n        searchMetric: \"passport\",\n        user: \"\",\n    };\n\n    componentDidMount() {\n        let id = 0;\n\n        this.setState({\n            user: id\n        })\n    }\n\n    // update search metric selection\n    handleSelect = event => {\n        this.setState({[event.target.name]: event.target.value});\n    };\n\n    render() {\n        const {match} = this.props;\n        const id = match.params.id;\n\n        return (\n            <div className=\"stalkerComponent\">\n                <h3>{id}</h3>\n                <form className=\"\" noValidate autoComplete=\"off\">\n                    <FormControl style={{width: '120px', paddingRight: '8px'}} className=\"\">\n                        <InputLabel htmlFor=\"filterSearchMetric\">Search Metric</InputLabel>\n                        <Select\n                            className=\"skuFilterSelect\"\n                            value={this.state.searchMetric}\n                            onChange={this.handleSelect}\n                            inputProps={{\n                                name: 'searchMetric',\n                                id: 'filterSearchMetric',\n                            }}\n                        >\n                            <MenuItem value={'ip'}>IP</MenuItem>\n                            <MenuItem value={'phone'}>Phone</MenuItem>\n                            <MenuItem value={'passport'}>Passport</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <TextField\n                        id=\"search\"\n                        label=\"Search IP/Phone/Passport\"\n                        type=\"search\"\n                        className=\"\"\n                        margin=\"dense\"\n                        style={{width: \"400px\"}}\n                    />\n                </form>\n                <Grid container>\n                    <Grid item xs={6}>\n                        <Card>\n                            <CardHeader color=\"info\">\n                                <h4 className=\"cardTitleWhite\">User Info</h4>\n                            </CardHeader>\n                            <CardBody className=\"cardTable\">\n                                <Grid container>\n                                    <Grid item xs={12} md={6}>\n                                        <List>\n                                            <ListItem>\n                                                <MaterialIcon icon='fingerprint'/>\n                                                <ListItemText\n                                                    primary=\"7DZ04BUIMV\"\n                                                    secondary='Passport ID'\n                                                />\n                                            </ListItem>\n                                            <ListItem>\n                                                <MaterialIcon icon='phone'/>\n                                                <ListItemText\n                                                    primary=\"555-555-5555\"\n                                                    secondary='Phone'\n                                                />\n                                            </ListItem>\n                                            <ListItem>\n                                                <MaterialIcon icon='person'/>\n                                                <ListItemText\n                                                    primary=\"Bill\"\n                                                    secondary='Name'\n                                                />\n                                            </ListItem>\n                                            <ListItem>\n                                                <MaterialIcon icon='public'/>\n                                                <ListItemText\n                                                    primary=\"N/A\"\n                                                    secondary='Geo'\n                                                />\n                                            </ListItem>\n                                        </List>\n                                    </Grid>\n                                </Grid>\n                            </CardBody>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Card>\n                            <CardHeader color=\"info\">\n                                <h4 className=\"cardTitleWhite\">User Metrics</h4>\n                            </CardHeader>\n                            <CardBody className=\"cardTable\">\n                                <Grid container>\n                                    <Grid item xs={12} md={6}>\n                                        <List>\n                                            <ListItem>\n                                                <MaterialIcon icon='phone_callback'/>\n                                                <ListItemText\n                                                    primary=\"1\"\n                                                    secondary='# of Calls'\n                                                />\n                                            </ListItem>\n                                            <ListItem>\n                                                <MaterialIcon icon='flag'/>\n                                                <ListItemText\n                                                    primary=\"5\"\n                                                    secondary='# of Actions'\n                                                />\n                                            </ListItem>\n                                            <ListItem>\n                                                <MaterialIcon icon='visibility'/>\n                                                <ListItemText\n                                                    primary=\"09/09/18\"\n                                                    secondary='First Encounter'\n                                                />\n                                            </ListItem>\n                                            <ListItem>\n                                                <MaterialIcon icon='visibility_off'/>\n                                                <ListItemText\n                                                    primary=\"09/13/18\"\n                                                    secondary='Final Encounter'\n                                                />\n                                            </ListItem>\n                                        </List>\n                                    </Grid>\n                                </Grid>\n                            </CardBody>\n                        </Card>\n                    </Grid>\n                </Grid>\n                <Card>\n                    <CardHeader color=\"prime\">\n                        <h4 className=\"cardTitleWhite\">User Action Trail</h4>\n                    </CardHeader>\n                    <CardBody className=\"cardTable\">\n                        <Table\n                            tableHeaderColor=\"prime\"\n                            tableHead={[\n                                \"Session ID\",\n                                \"Date\",\n                                \"Channel\",\n                                \"Touch\",\n                                \"Call?\",\n                                \"Domain\",\n                                \"URL\",\n                                \"T.O.P.\",\n                            ]}\n                            tableData={[\n                                [\"f34r4fvh5\", \"09/09/18\", \"Organic - Google\", \"First\", \"no\", \"timberlineknolls.com\", \"/admissions\", \"2m\"],\n                                [\"f34r4fvh5\", \"09/09/18\", \"Organic - Google\", \"Contributing\", \"no\", \"timberlineknolls.com\", \"/depression\", \"6m\"],\n                                [\"f34r4fvh5\", \"09/09/18\", \"Organic - Google\", \"Contributing\", \"no\", \"timberlineknolls.com\", \"/admissions/criteria\", \"2m\"],\n                                [\"f34r4fvh5\", \"09/09/18\", \"Organic - Google\", \"Conversion\", \"yes\", \"timberlineknolls.com\", \"/programs\", \"3m\"],\n                                [\"yui1sh965\", \"09/13/18\", \"Email - Other\", \"Final\", \"no\", \"burkwoodtreatmentcenter.com\", \"/lp\", \"5m\"],\n                            ]}\n                        />\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Stalker);","import React, {Component} from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Builder from \"./Builder\";\nimport Stalker from './Stalker';\n\n\nconst styles = {\n    cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n        }\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n        }\n    },\n    cardConversionGraph: {\n        width: '90%',\n        margin: '0 6px',\n    },\n    cardConversionTable: {\n        overflowX: 'auto',\n    },\n};\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{padding: 8 * 3}}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass Explorer extends Component {\n    constructor(props) {\n        super(props);\n\n        console.log(props.parentState);\n    }\n\n    state = {\n        tabValue: this.props.parentState.Explorer.tabValue,\n    };\n\n    handleTabChange = (event, tabValue) => {\n        this.setState({tabValue});\n\n        this.props.updateDash('tabValue', tabValue);\n    };\n\n    // For child elements to update dash state\n    updateDashBuilder = (val) => {\n        this.setState({\n            Builder: val\n        });\n    };\n\n    render() {\n        const {tabValue} = this.state;\n\n        return (\n            <div className=\"explorerComponent\">\n                <h3>Explorer</h3>\n\n                <Tabs\n                    value={this.state.tabValue}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={this.handleTabChange}\n                    style={{display: 'inline-block'}}\n                    centered\n                >\n                    <Tab label=\"Deep Dive\"/>\n                    <Tab label=\"Stalker\"/>\n                    <Tab label=\"Builder\"/>\n                </Tabs>\n\n                {tabValue === 0 && <TabContainer>\n\n                </TabContainer>}\n\n                {tabValue === 1 && <TabContainer>\n                    <Stalker/>\n                </TabContainer>}\n\n                {tabValue === 2 && <TabContainer>\n\n                    <Builder parentState={this.props.parentState} updateDash={this.updateDashBuilder}/>\n                </TabContainer>}\n\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Explorer);","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport MaterialIcon from \"material-icons-react\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Drawer from '@material-ui/core/Drawer';\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport Select from \"@material-ui/core/Select/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nclass DateComponent extends React.Component {\n\n    state = {\n        top: false,\n        dateDenomination: 'custom',\n        open: false,\n    };\n\n    // Updates the selected facility list\n    updateToDate = (val) => {\n        let dateFrame = {\n            From: this.props.dateFrame.From,\n            To: val\n        };\n\n        // Check if input To date is before current From date; adjust From date (-1) if so\n        if (val < this.props.dateFrame.From) {\n            dateFrame.From = moment(val).subtract(1, 'days').format('YYYY-MM-DD');\n        }\n\n        // Push update to Dash state\n        this.props.onUpdate(dateFrame);\n    };\n\n    // Updates the selected facility list\n    updateFromDate = (val) => {\n        let dateFrame = {\n            From: val,\n            To: this.props.dateFrame.To\n        };\n\n        // Check if input From date is after current To date; adjust To date (+1) if so\n        if (val > this.props.dateFrame.To) {\n            dateFrame.To = moment(val).add(1, 'days').format('YYYY-MM-DD');\n        }\n\n        // Push update to Dash state\n        this.props.onUpdate(dateFrame);\n    };\n\n    // Compare dates update for when month over month, w/w, etc. is selected\n    updateCompareToDate = (val) => {\n        let dateFrame = {\n            From: this.props.dateFrame.From,\n            To: this.props.dateFrame.To,\n            CompareFrom: this.props.dateFrame.CompareFrom,\n            CompareTo: val\n        };\n\n        // Check if input To date is before current From date; adjust From date (-1) if so\n        if (val < this.props.dateFrame.CompareFrom) {\n            dateFrame.CompareFrom = moment(val).subtract(1, 'days').format('YYYY-MM-DD');\n        }\n\n        // Push update to Dash state\n        this.props.onUpdate(dateFrame);\n    };\n\n    updateCompareFromDate = (val) => {\n        let dateFrame = {\n            From: this.props.dateFrame.From,\n            To: this.props.dateFrame.To,\n            CompareFrom: val,\n            CompareTo: this.props.dateFrame.CompareTo\n        };\n\n        // Check if input From date is after current To date; adjust To date (+1) if so\n        if (val > this.props.dateFrame.CompareTo) {\n            dateFrame.CompareTo = moment(val).add(1, 'days').format('YYYY-MM-DD');\n        }\n\n        // Push update to Dash state\n        this.props.onUpdate(dateFrame);\n    };\n\n    toggleDrawer = (side, open) => () => {\n        this.setState({\n            [side]: open,\n        });\n    };\n\n    // update date denomination\n    handleDateDenominationSelect = name => event => {\n        let dateDenom = event.target.value;\n\n        this.setState({\n            dateDenomination: dateDenom\n        });\n\n        // Initialize temp dates\n        let tempTo;\n        let tempFrom;\n\n        // Set values for temp dates based on input\n        switch (dateDenom) {\n            case 'today':\n                tempTo = moment();\n                tempFrom = moment();\n                break;\n            case 'yesterday':\n                tempTo = moment().subtract(1, 'days');\n                tempFrom = moment().subtract(1, 'days');\n                break;\n            case 'lastWeek':\n                tempTo = moment().subtract(1, 'weeks').endOf('week');\n                tempFrom = moment().subtract(1, 'weeks').startOf('week');\n                break;\n            case 'lastMonth':\n                tempTo = moment().subtract(1, 'months').endOf('month');\n                tempFrom = moment().subtract(1, 'months').startOf('month');\n                break;\n            case 'last7':\n                tempTo = moment();\n                tempFrom = moment().subtract(7, 'days');\n                break;\n            case 'last30':\n                tempTo = moment();\n                tempFrom = moment().subtract(30, 'days');\n                break;\n            default:\n                tempTo = moment(this.props.dateFrame.To);\n                tempFrom = moment(this.props.dateFrame.From);\n\n        }\n\n        let dateFrame = {\n            From: tempFrom.format('YYYY-MM-DD'),\n            To: tempTo.format('YYYY-MM-DD'),\n            CompareFrom: this.props.dateFrame.CompareFrom,\n            CompareTo: this.props.dateFrame.CompareTo\n        };\n\n        // Push update to Dash state\n        this.props.onUpdate(dateFrame);\n    };\n\n    // Remove comparison date range\n    clearDates = () => {\n        let dateFrame = {\n            From: this.props.dateFrame.From,\n            To: this.props.dateFrame.To,\n            CompareFrom: '',\n            CompareTo: ''\n        };\n\n        // Push update to Dash state\n        this.props.onUpdate(dateFrame);\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render() {\n        return (\n            <form className=\"col-lg-3 datePicker\">\n\n                <Tooltip title=\"Select Dates\" placement=\"bottom\">\n                    <Button onClick={this.handleClickOpen} style={{top: '5px'}}>\n                        <MaterialIcon icon='date_range' size={26} color=''/>\n                        {moment(this.props.dateFrame.From).format('l')} - {moment(this.props.dateFrame.To).format('l')}\n                    </Button>\n                </Tooltip>\n\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    style={{paddingLeft: '180px', top: '-20%'}}\n                >\n                    <DialogTitle id=\"form-dialog-title\">Date Options</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText></DialogContentText>\n\n                        <FormGroup>\n                            <FormGroup row style={{margin: 'auto', padding: '10px 5px'}}>\n                                <FormControl style={{paddingRight: '20px'}}>\n                                    <InputLabel htmlFor=\"filterDateDenomination\">Presets</InputLabel>\n                                    <Select\n                                        className=\"skuFilterSelect\"\n                                        value={this.state.dateDenomination}\n                                        onChange={this.handleDateDenominationSelect('dateDenomination')}\n                                        inputProps={{\n                                            name: 'dateDenomination',\n                                            id: 'filterDateDenomination',\n                                        }}\n                                    >\n                                        <MenuItem value={'custom'}>Custom</MenuItem>\n                                        <MenuItem value={'today'}>Today</MenuItem>\n                                        <MenuItem value={'yesterday'}>Yesterday</MenuItem>\n                                        <MenuItem value={'lastWeek'}>Last Week</MenuItem>\n                                        <MenuItem value={'lastMonth'}>Last Month</MenuItem>\n                                        <MenuItem value={'last7'}>Last 7 Days</MenuItem>\n                                        <MenuItem value={'last30'}>Last 30 Days</MenuItem>\n                                    </Select>\n                                </FormControl>\n\n                                <Tooltip title=\"Primary Start Date\" placement=\"bottom\">\n                                    <TextField\n                                        required={true}\n                                        id=\"dateFrom\"\n                                        label=\"From\"\n                                        type=\"date\"\n                                        value={this.props.dateFrame.From}\n                                        onChange={(e) => this.updateFromDate(e.target.value)}\n                                        className=\"datePicker-textField\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </Tooltip>\n                                <Tooltip title=\"Primary End Date\" placement=\"bottom\">\n                                    <TextField\n                                        required={true}\n                                        id=\"dateTo\"\n                                        label=\"To\"\n                                        type=\"date\"\n                                        value={this.props.dateFrame.To}\n                                        onChange={(e) => this.updateToDate(e.target.value)}\n                                        className=\"datePicker-textField\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </Tooltip>\n                            </FormGroup>\n\n                            <FormGroup row style={{margin: 'auto', paddingTop: '20px'}}>\n                                <Tooltip title=\"Secondary Start Date\" placement=\"bottom\">\n                                    <TextField\n                                        required={true}\n                                        id=\"dateCompareFrom\"\n                                        label=\"SEC From\"\n                                        type=\"date\"\n                                        value={this.props.dateFrame.CompareFrom}\n                                        onChange={(e) => this.updateCompareFromDate(e.target.value)}\n                                        className=\"datePicker-textField\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </Tooltip>\n                                <Tooltip title=\"Secondary End Date\" placement=\"bottom\">\n                                    <TextField\n                                        required={true}\n                                        id=\"dateCompareTo\"\n                                        label=\"SEC To\"\n                                        type=\"date\"\n                                        value={this.props.dateFrame.CompareTo}\n                                        onChange={(e) => this.updateCompareToDate(e.target.value)}\n                                        className=\"datePicker-textField\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </Tooltip>\n                            </FormGroup>\n                        </FormGroup>\n                    </DialogContent>\n                    <DialogActions style={{padding: '10px'}}>\n                        <Button variant=\"contained\" color=\"primary\"\n                                style={{backgroundColor: '#00C853', color: '#ffffff', marginRight: '10px'}}\n                                onClick={() => {\n                                    this.props.refreshView();\n                                    this.handleClose();\n                                }}\n                        >\n                            Apply\n                        </Button>\n                        <Button variant=\"contained\" className=\"\" onClick={this.clearDates}>\n                            Clear\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Drawer anchor=\"top\" open={this.state.top} onClose={this.toggleDrawer('top', false)}>\n                    <div\n                        style={{padding: 20, textAlign: 'center'}}\n                        tabIndex={0}\n                        role=\"button\"\n                    >\n\n                    </div>\n                </Drawer>\n            </form>\n        );\n    }\n}\n\nexport default DateComponent;","import React, {Component} from 'react';\nimport Card from '../../tools/Card/Card';\nimport CardHeader from \"../../tools/Card/CardHeader\";\nimport CardBody from '../../tools/Card/CardBody';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst styles = {\n    cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n        }\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n        }\n    },\n    cardConversionGraph: {\n        width: '90%',\n        margin: '0 6px',\n    },\n    cardConversionTable: {\n        overflowX: 'auto',\n    },\n};\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{padding: 8 * 3}}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass Touch extends Component {\n    constructor(props) {\n        super(props);\n\n        console.log(props.parentState);\n    }\n\n    state = {\n        tabValue: this.props.parentState.Touch.tabValue,\n\n    };\n\n    handleTabChange = (event, tabValue) => {\n        this.setState({tabValue});\n\n        this.props.updateDash('tabValue', tabValue);\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {tabValue} = this.state;\n\n        return (\n            <div className=\"touchComponent\">\n                <h3>Touch</h3>\n\n                <Tabs\n                    value={this.state.tabValue}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={this.handleTabChange}\n                    style={{display: 'inline-block'}}\n                >\n                    <Tab label=\"Medium\"/>\n                    <Tab label=\"Source\"/>\n                    <Tab label=\"Disorder\"/>\n                </Tabs>\n\n                {tabValue === 0 && <TabContainer>\n                    <Card>\n                        <CardHeader color=\"danger\">\n                            <h4 className=\"cardTitleWhite\">Medium</h4>\n                        </CardHeader>\n                        <CardBody className={classes.cardConversionTable}>\n\n                        </CardBody>\n                    </Card>\n                </TabContainer>}\n\n                {tabValue === 1 && <TabContainer>\n                    <Card>\n                        <CardHeader color=\"info\">\n                            <h4 className=\"cardTitleWhite\">Source</h4>\n                        </CardHeader>\n                        <CardBody className={classes.cardConversionTable}>\n\n                        </CardBody>\n                    </Card>\n                </TabContainer>}\n\n                {tabValue === 2 && <TabContainer>\n                    <Card>\n                        <CardHeader color=\"prime\">\n                            <h4 className=\"cardTitleWhite\">Disorder</h4>\n                        </CardHeader>\n                        <CardBody className={classes.cardConversionTable}>\n\n                        </CardBody>\n                    </Card>\n                </TabContainer>}\n\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Touch);","import React, {Component} from \"react\";\nimport {Bar} from 'react-chartjs-2';\nimport toolbox from \"../../tools/toolbox\";\nimport moment from 'moment';\nimport Switch from '@material-ui/core/Switch';\n\n\nexport class LineChart extends Component {\n    constructor(props) {\n        super(props);\n\n        // Retrieve local store\n        let yakPak = toolbox.retrievePak();\n        let toDate = yakPak == null ? new Date() : new Date(yakPak.DateFrame.To);\n        let startDay = yakPak == null ? moment().add(-7, 'days') : moment(yakPak.DateFrame.From);\n        let endDay = yakPak == null ? moment() : moment(yakPak.DateFrame.To);\n        let numbDays = endDay.diff(startDay, 'days');\n\n        let primaryLabels = [];\n\n        // Generate date labels starting with 'toDate' and iterating back through length of data\n        for (let i = -1; i < numbDays; i++) {\n            // parse date for how many days prior\n            let temp = new Date();\n            temp.setDate(toDate.getDate() - i);\n            primaryLabels.unshift((toDate.getUTCMonth() + 1) + \"/\" + temp.getDate());\n        }\n\n        this.state = {\n            showHistory: false,\n            chartData: {\n                labels: primaryLabels,\n                datasets: [\n                    {\n                        data: [],\n                        yAxisID: 'b',\n                        type: 'line',\n                        label: 'Conversions',\n                        fill: false,\n                        backgroundColor: \"#fff\",\n                        borderColor: \"#737373\",\n                        borderCapStyle: 'butt',\n                        borderDash: [10, 10],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        lineTension: .3,\n                        pointBackgroundColor: \"#fff\",\n                        pointBorderColor: \"#737373\",\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: \"#737373\",\n                        pointHoverBorderColor: \"#737373\",\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 4,\n                        pointHitRadius: 10\n                    },\n                    {\n                        label: \"Directories\",\n                        backgroundColor: 'rgb(78,175,74)',\n                        borderColor: '#4EAF4A',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],  // chart data comes from props in domain-card\n                        stack: 1,\n                    },\n                    {\n                        label: \"Internal Directories\",\n                        backgroundColor: '#377EB8',\n                        borderColor: '#377EB8',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Lead Gen\",\n                        backgroundColor: '#FF6F00',\n                        borderColor: '#FF6F00',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Other\",\n                        backgroundColor: '#AF1B3F',\n                        borderColor: '#AF1B3F',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Placement\",\n                        backgroundColor: '#963484',\n                        borderColor: '#963484',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Search\",\n                        backgroundColor: '#FFD600',\n                        borderColor: '#FFD600',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Search Engine\",\n                        backgroundColor: '#73FBD3',\n                        borderColor: '#73FBD3',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Sign Up\",\n                        backgroundColor: '#80A1C1',\n                        borderColor: '#80A1C1',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Social\",\n                        backgroundColor: '#FF4081',\n                        borderColor: '#FF4081',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Sponsorship\",\n                        backgroundColor: '#B388FF',\n                        borderColor: '#B388FF',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                ]\n            },\n            chartOptions: {\n                tooltips: {\n                    titleFontSize: 0,\n                    titleSpacing: 0,\n                    callbacks: {\n                        label: function (tooltipItem, data) {\n                            let label = data.datasets[tooltipItem.datasetIndex].label + ' ' +\n                                data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].pointLabel;\n                            return label + ': (' + tooltipItem.yLabel + ')';\n                        }\n                    }\n                },\n                responsive: true,\n                scales: {\n                    xAxes: [{\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Date'\n                        },\n                        time: {\n                            unit: 'day',\n                            displayFormats: {\n                                quarter: 'MMM D'\n                            }\n                        },\n                        distribution: 'series',\n                    }],\n                    yAxes: [{\n                        id: 'a',\n                        weight: 2,\n                        position: 'left',\n                        stacked: true,\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Touches'\n                        },\n                        ticks: {\n                            beginAtZero: true,\n                        }\n                    },{\n                        id: 'b',\n                        weight: 1,\n                        stacked: false,\n                        position: 'right',\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Conversions'\n                        },\n                        ticks: {\n                            beginAtZero: true,\n                        }\n                    }]\n                }\n            },\n        };\n\n        this.calculateDateRange();\n    }\n\n    // Grab the current stored date frame and label chart data\n    calculateDateRange = () => {\n        let yakPak = toolbox.retrievePak();\n\n        // Check if we have comparison dates\n        if (yakPak.DateFrame.CompareFrom !== '' && yakPak.DateFrame.CompareTo !== '') {\n            let compareToDate = new Date(yakPak.DateFrame.CompareTo);\n            let compareStartDay = moment(yakPak.DateFrame.CompareFrom);\n            let compareEndDay = moment(yakPak.DateFrame.CompareTo);\n            let compareNumbDays = compareEndDay.diff(compareStartDay, 'days');\n\n            let tempLabels = [];\n\n            for (let i = -1; i < compareNumbDays; i++) {\n                // parse date for how many days prior\n                let temp = new Date();\n                temp.setDate(compareToDate.getDate() - i);\n                tempLabels.unshift((compareToDate.getUTCMonth() + 1) + \"/\" + temp.getDate());\n            }\n\n            // Populate data with comparison dates\n            this.populateData(this.state.chartData.labels, this.state.chartData);\n        } else {\n            this.populateData(this.state.chartData.labels, this.state.chartData);\n        }\n    };\n\n    // Pass in calculated date labels, assign them to\n    populateData = (dateLabels, tempObj) => {\n        // Grab data from state if none passed in\n        if (tempObj == null) {\n            tempObj = this.state.chartData;\n        }\n        let datasets = tempObj.datasets.length;\n\n        console.log(datasets);\n\n        for (let i = 0; i < dateLabels.length; i++) {\n            for (let j = 0; j < datasets; j++) {\n                tempObj.datasets[j].data[i] = {\n                    \"x\": dateLabels[i],\n                    \"y\": Math.floor(Math.random() * Math.floor(20)),\n                    \"pointLabel\": dateLabels[i]\n                };\n            }\n\n\n        }\n\n        console.log(tempObj);\n\n        let dummyOptions = this.state.chartOptions;\n        // Set state with fresh data\n        this.setState({\n            chartData: tempObj,\n            chartOptions: dummyOptions,\n        });\n    };\n\n    handleHistoryChange = name => event => {\n        let labels = this.state.chartData.labels;\n        console.log(event.target.checked);\n\n        let tempChartD = {};\n        if (event.target.checked) {\n                tempChartD = {\n                    labels: labels,\n                    datasets: [\n                        {\n                            data: [],\n                            yAxisID: 'b',\n                            type: 'line',\n                            label: 'Conversions',\n                            fill: false,\n                            backgroundColor: \"#fff\",\n                            borderColor: \"#737373\",\n                            borderCapStyle: 'butt',\n                            borderDash: [10, 10],\n                            borderDashOffset: 0.0,\n                            borderJoinStyle: 'miter',\n                            lineTension: .3,\n                            pointBackgroundColor: \"#fff\",\n                            pointBorderColor: \"#737373\",\n                            pointBorderWidth: 1,\n                            pointHoverRadius: 5,\n                            pointHoverBackgroundColor: \"#737373\",\n                            pointHoverBorderColor: \"#737373\",\n                            pointHoverBorderWidth: 2,\n                            pointRadius: 4,\n                            pointHitRadius: 10\n                        },\n                        {\n                            label: \"Directories\",\n                            backgroundColor: 'rgb(78,175,74)',\n                            borderColor: '#4EAF4A',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],  // chart data comes from props in domain-card\n                            stack: 1,\n                        },\n                        {\n                            label: \"Internal Directories\",\n                            backgroundColor: '#377EB8',\n                            borderColor: '#377EB8',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Lead Gen\",\n                            backgroundColor: '#FF6F00',\n                            borderColor: '#FF6F00',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Other\",\n                            backgroundColor: '#AF1B3F',\n                            borderColor: '#AF1B3F',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Placement\",\n                            backgroundColor: '#963484',\n                            borderColor: '#963484',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Search\",\n                            backgroundColor: '#FFD600',\n                            borderColor: '#FFD600',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Search Engine\",\n                            backgroundColor: '#73FBD3',\n                            borderColor: '#73FBD3',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Sign Up\",\n                            backgroundColor: '#80A1C1',\n                            borderColor: '#80A1C1',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Social\",\n                            backgroundColor: '#FF4081',\n                            borderColor: '#FF4081',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Sponsorship\",\n                            backgroundColor: '#B388FF',\n                            borderColor: '#B388FF',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"_Directories\",\n                            backgroundColor: 'rgb(78,175,74, 0.2)',\n                            borderColor: 'rgb(78,175,74, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                        {\n                            label: \"_Internal Directories\",\n                            backgroundColor: 'rgb(55,126,184, 0.2)',\n                            borderColor: 'rgb(55,126,184, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                        {\n                            label: \"_Lead Gen\",\n                            backgroundColor: 'rgb(255,111,0, 0.2)',\n                            borderColor: 'rgb(255,111,0, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                        {\n                            label: \"_Other\",\n                            backgroundColor: 'rgb(175,27,63, 0.2)',\n                            borderColor: 'rgb(175,27,63, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                        {\n                            label: \"_Placement\",\n                            backgroundColor: 'rgb(150,52,132, 0.2)',\n                            borderColor: 'rgb(150,52,132, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                        {\n                            label: \"_Search\",\n                            backgroundColor: 'rgb(255,214,0, 0.2)',\n                            borderColor: 'rgb(255,214,0, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                        {\n                            label: \"_Search Engine\",\n                            backgroundColor: 'rgb(115,251,211, 0.2)',\n                            borderColor: 'rgb(115,251,211, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                        {\n                            label: \"_Sign Up\",\n                            backgroundColor: 'rgb(128,161,193, 0.2)',\n                            borderColor: 'rgb(128,161,193, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                        {\n                            label: \"_Social\",\n                            backgroundColor: 'rgb(255,64,129, 0.2)',\n                            borderColor: 'rgb(255,64,129, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                        {\n                            label: \"_Sponsorship\",\n                            backgroundColor: 'rgb(179,136,255, 0.2)',\n                            borderColor: 'rgb(179,136,255, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                    ]\n                }\n        } else {\n                tempChartD = {\n                    labels: labels,\n                    datasets: [\n                        {\n                            data: [],\n                            yAxisID: 'b',\n                            type: 'line',\n                            label: 'Conversions',\n                            fill: false,\n                            backgroundColor: \"#fff\",\n                            borderColor: \"#737373\",\n                            borderCapStyle: 'butt',\n                            borderDash: [10, 10],\n                            borderDashOffset: 0.0,\n                            borderJoinStyle: 'miter',\n                            lineTension: .3,\n                            pointBackgroundColor: \"#fff\",\n                            pointBorderColor: \"#737373\",\n                            pointBorderWidth: 1,\n                            pointHoverRadius: 5,\n                            pointHoverBackgroundColor: \"#737373\",\n                            pointHoverBorderColor: \"#737373\",\n                            pointHoverBorderWidth: 2,\n                            pointRadius: 4,\n                            pointHitRadius: 10\n                        },\n                        {\n                            label: \"Directories\",\n                            backgroundColor: 'rgb(78,175,74)',\n                            borderColor: '#4EAF4A',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],  // chart data comes from props in domain-card\n                            stack: 1,\n                        },\n                        {\n                            label: \"Internal Directories\",\n                            backgroundColor: '#377EB8',\n                            borderColor: '#377EB8',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Lead Gen\",\n                            backgroundColor: '#FF6F00',\n                            borderColor: '#FF6F00',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Other\",\n                            backgroundColor: '#AF1B3F',\n                            borderColor: '#AF1B3F',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Placement\",\n                            backgroundColor: '#963484',\n                            borderColor: '#963484',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Search\",\n                            backgroundColor: '#FFD600',\n                            borderColor: '#FFD600',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Search Engine\",\n                            backgroundColor: '#73FBD3',\n                            borderColor: '#73FBD3',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Sign Up\",\n                            backgroundColor: '#80A1C1',\n                            borderColor: '#80A1C1',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Social\",\n                            backgroundColor: '#FF4081',\n                            borderColor: '#FF4081',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Sponsorship\",\n                            backgroundColor: '#B388FF',\n                            borderColor: '#B388FF',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                    ]\n                }\n        }\n\n        this.setState({\n            showHistory: event.target.checked,\n            chartData: tempChartD,\n        });\n\n        console.log(this.state);\n        // Then reload data\n        this.populateData(labels, tempChartD);\n    };\n\n\n    render() {\n        return (\n            <div className=\"reactChart\">\n                <div style={{paddingBottom: '20px', float: 'right'}}>\n                    Show History:\n                    <Switch\n                        checked={this.state.showHistory}\n                        onChange={this.handleHistoryChange('showHistory')}\n                        value=\"showHistory\"\n                        color=\"primary\"\n                    />\n                </div>\n                <Bar\n                    data={this.state.chartData}\n                    options={this.state.chartOptions}\n                />\n            </div>\n        );\n    }\n}\n\nexport default LineChart;","import React, {Component} from 'react';\nimport Table from '../../tools/table.js';\nimport Card from '../../tools/Card/Card';\nimport CardHeader from \"../../tools/Card/CardHeader\";\nimport CardBody from '../../tools/Card/CardBody';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport LineChart from './lineChart';\n\n\nconst styles = {\n    cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n        }\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n        }\n    },\n    cardConversionGraph: {\n        width: '90%',\n        margin: '0 6px',\n    },\n    cardConversionTable: {\n        overflowX: 'auto',\n    },\n};\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{padding: 8 * 3}}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass Timeframe extends Component {\n    constructor(props) {\n        super(props);\n\n        console.log(props.parentState);\n    }\n\n    state = {\n        tabValue: this.props.parentState.Timeframe.tabValue,\n    };\n\n    handleTabChange = (event, tabValue) => {\n        this.setState({tabValue});\n\n        this.props.updateDash('tabValue', tabValue);\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {tabValue} = this.state;\n\n        return (\n            <div className=\"conversionComponent\">\n                <h3>Timeframe</h3>\n\n                <Card>\n                    <CardHeader color=\"prime\">\n                        <h4 className=\"cardTitleWhite\">Touches (Medium) v Conversions</h4>\n                    </CardHeader>\n                    <CardBody className={classes.cardConversionTable}>\n                        <LineChart/>\n                    </CardBody>\n                </Card>\n\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Timeframe);","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport moment from 'moment';\nimport toolbox from './tools/toolbox';\nimport FacilityAutoComplete from './tools/facilityAutoComplete';\nimport Sidebar from './sidebar/Sidebar';\nimport Conversion from './components/Conversion/Conversion';\nimport ConversionPath from './components/Conversion/ConversionPath';\nimport Export from './components/Export/Export';\nimport Settings from \"./components/Settings/Settings\";\nimport Explorer from \"./components/Explorer/Explorer\";\nimport DateComponent from './tools/DateComponent';\nimport Touch from \"./components/Touch/Touch\";\nimport Timeframe from \"./components/Timeframe/Timeframe\";\n\n\n// Global state for local storage\nlet savedState = [];\n\nclass Dash extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // Retrieve local store\n        let yakPak = toolbox.retrievePak();\n        console.log(\"Saved PAK: \", JSON.stringify(yakPak));\n\n        // If local store not found, initialize base state\n        if (yakPak == null) {\n            this.state = {\n                SelectedFacility: [],\n                DateFrame: {\n                    From: moment().add(-7, 'days').format('YYYY-MM-DD'),\n                    To: moment().format('YYYY-MM-DD'),\n                    CompareFrom: '',\n                    CompareTo: ''\n                },\n                Filter: {\n                    conversion: [],\n                    touch: [],\n                    rollup: [],\n                    channel: [],\n                    source: [],\n                    campaign: [],\n                    tier: [],\n                    medium: [],\n                    disorder: [],\n                    network: [],\n                    targetingMethod: [],\n                    format: [],\n                    message: [],\n                    ageRange: [],\n                    ethnicity: [],\n                    familyRole: [],\n                    gender: [],\n                    income: [],\n                    interestsBehaviors: [],\n                    language: [],\n                    education: [],\n                    occupation: [],\n                    relationship: [],\n                    religion: []\n                },\n                Touch: {\n                    tabValue: 0\n                },\n                Conversion: {\n                    tabValue: 0\n                },\n                Explorer: {\n                    tabValue: 0\n                },\n                Storyboard: {\n                    tabValue: 0,\n                    searchMetric: 'ip',\n                    storyPivot: 'session'\n                },\n                Builder: {\n                    Columns: [],\n                },\n                Timeframe: {\n                    tabValue: 0\n                },\n            };\n        } else {\n            this.state = toolbox.retrievePak();\n        }\n\n        // Set global state so it's not empty\n        savedState = this.state;\n    }\n\n\n    // Check if user was authenticated, return true if so\n    isAuthenticated() {\n        return true;\n    }\n\n    // // If not logged in redirect to login\n    // componentWillMount(){\n    //     if(!this.Auth.loggedIn())\n    //         this.props.history.replace('/login');\n    // }\n\n    // Set offload func to save to local store just once on unload\n    componentDidMount() {\n        window.onbeforeunload = function () {\n            toolbox.storePak(savedState);\n        }\n    }\n\n    // Update global state for onbeforeunload func\n    componentDidUpdate() {\n        savedState = this.state;\n        toolbox.storePak(savedState);\n    }\n\n    // Update SelectedFacility state; pass back from facility auto complete component\n    updateSelectedFacility = (val) => {\n        this.setState({\n            SelectedFacility: val\n        });\n    };\n\n    // Update SKUFilter state; pass back from skufilter component\n    updateSKUFilter = (val) => {\n        this.setState({\n            Filter: val\n        });\n\n        console.log(this.state);\n    };\n\n    // Update DateFrame state\n    updateDate = (val) => {\n        this.setState({\n            DateFrame: val\n        });\n        console.log(val);\n        localStorage.setItem(\"fromDate\", val.From);\n        localStorage.setItem(\"toDate\", val.To);\n        localStorage.setItem(\"compareFromDate\", val.CompareFrom);\n        localStorage.setItem(\"compareToDate\", val.CompareTo);\n    };\n\n    // For child elements to update dash state\n    updateDashConversion = (name, val) => {\n        this.setState({\n            Conversion: {\n                [name]: val\n            }\n        })\n    };\n\n    // For child elements to update dash state\n    updateDashTimeframe = (name, val) => {\n        this.setState({\n            Timeframe: {\n                [name]: val\n            }\n        })\n    };\n\n    // For child elements to update dash state\n    updateDashStoryboard = (val) => {\n        this.setState({\n            Storyboard: val\n        });\n    };\n\n    // For child elements to update dash state\n    updateDashExplorer = (name, val) => {\n        this.setState({\n            Explorer:  {\n                [name]: val\n            }\n        });\n    };\n\n    // Reload view\n    refreshView = () => {\n        window.location.reload();\n    };\n\n\n    render() {\n        // Load dashboard if user is legit\n        if (this.isAuthenticated()) {\n            return (\n                <div className=\"dash\">\n                    <FacilityAutoComplete selected={this.state.SelectedFacility}\n                                          onUpdate={this.updateSelectedFacility}/>\n                    <DateComponent dateFrame={this.state.DateFrame} onUpdate={this.updateDate}\n                                refreshView={this.refreshView}/>\n\n                    <Sidebar selected={this.state.Filter} onUpdate={this.updateSKUFilter}\n                             rightDrawer={this.state.rightDrawer}/>\n\n                    <Route path=\"/touch\" render={() => <Touch parentState={this.state} updateDash={this.updateDashStoryboard}/>}/>\n                    <Route exact path=\"/conversion\" render={() => <Conversion parentState={this.state} updateDash={this.updateDashConversion}/>}/>\n                    <Route path=\"/conversion/path\" render={() => <ConversionPath parentState={this.state} updateDash={this.updateDashConversion}/>}/>\n                    <Route path=\"/explorer/\" render={() => <Explorer parentState={this.state} updateDash={this.updateDashExplorer}/>}/>\n                    <Route path=\"/export\" render={() => <Export selected={this.state.SelectedFacility}/>}/>\n                    <Route path=\"/settings\" render={() => <Settings/>}/>\n                    <Route path=\"/timeframe\" render={() => <Timeframe parentState={this.state} updateDash={this.updateDashTimeframe}/>}/>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <h2>User Not Identified!</h2>\n                </div>\n            );\n        }\n\n    }\n}\n\nexport default Dash;","// import decode from 'jwt-decode';\n\nexport default class AuthService {\n    // Initializing important variables\n    constructor(domain) {\n        this.domain = domain || 'http://localhost:8080'; // API server domain\n        this.fetch = this.fetch.bind(this); // React binding stuff\n        this.login = this.login.bind(this);\n        this.getProfile = this.getProfile.bind(this)\n    }\n\n    login(username, password) {\n        // Get a token from api server using the fetch api\n        return this.fetch(`${this.domain}/login`, {\n            method: 'POST',\n            body: JSON.stringify({\n                username,\n                password\n            })\n        }).then(res => {\n            this.setToken(res.token); // Setting the token in localStorage\n            return Promise.resolve(res);\n        })\n    }\n\n    loggedIn() {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken(); // Getting token from localstorage\n        return !!token && !this.isTokenExpired(token); // handwaiving here\n    }\n\n    isTokenExpired(token) {\n        try {\n            const decoded = token; // decode(token);\n\n            // Checking if token is expired, return True/False\n            return (decoded.exp < Date.now() / 1000);\n        }\n        catch (err) {\n            return false;\n        }\n    }\n\n    setToken = (idToken) => {\n        // Saves user token to localStorage\n        localStorage.setItem('id_token', idToken);\n    };\n\n    getToken = () => {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem('id_token');\n    };\n\n    logout = () => {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem('id_token');\n    };\n\n    getProfile() {\n        // Using jwt-decode npm package to decode the token\n\n        // return decode(this.getToken());\n        return this.getToken();\n    }\n\n\n    fetch(url, options) {\n        // performs api calls sending the required authentication headers\n        const headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        };\n\n        // Setting Authorization header\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\n        if (this.loggedIn()) {\n            headers['Authorization'] = 'Bearer ' + this.getToken()\n        }\n\n        return fetch(url, {\n            headers,\n            ...options\n        })\n            .then(this._checkStatus)\n            .then(response => response.json())\n    }\n\n    _checkStatus = (response) => {\n        // raises an error in case response status is not a success\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\n            return response;\n        } else {\n            let error = new Error(response.statusText);\n            error.response = response;\n            throw error\n        }\n    }\n}\n","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport AuthService from './AuthService';\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport CardHeader from \"../dashboard/tools/Card/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent/CardContent\";\nimport Card from \"../dashboard/tools/Card/Card\";\nimport CardActions from \"@material-ui/core/CardActions/CardActions\";\nimport './Login.css';\nimport logo from \"../assets/logo/yak-logo-fullbody.svg\";\n\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.Auth = new AuthService();\n    }\n\n    // Redirect login page if\n    componentWillMount() {\n        if (this.Auth.loggedIn())\n            this.props.history.replace('/');\n    }\n\n    render() {\n        return (\n            <div className=\"loginBlock\">\n                <img src={logo} style={{height: \"280px\"}} alt=\"logo\"/>\n                <br/>\n                <Card style={{width: '50%', minWidth: '400px'}}>\n                    <CardHeader color=\"prime\">\n                        <h4 className={'cardTitleWhite'}>YAK</h4>\n                    </CardHeader>\n                    <CardContent>\n                        <FormControl className=\"\">\n                            <form>\n                                <TextField\n                                    required\n                                    id=\"username-input\"\n                                    label=\"Username\"\n                                    className={'textField'}\n                                    margin=\"normal\"\n                                    onChange={this.handleChange}\n                                />\n                                <br/>\n                                <TextField\n                                    required\n                                    id=\"password-input\"\n                                    label=\"Password\"\n                                    className={'textField'}\n                                    type=\"password\"\n                                    autoComplete=\"current-password\"\n                                    margin=\"normal\"\n                                    onChange={this.handleChange}\n                                />\n                                <CardActions style={{display: 'block'}}>\n                                    <Button variant=\"contained\" size=\"large\"\n                                            onClick={this.props.onSubmit}\n                                            >\n                                        Login\n                                    </Button>\n                                </CardActions>\n                            </form>\n                        </FormControl>\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n\n    handleChange(e) {\n        this.setState(\n            {\n                [e.target.name]: e.target.value\n            }\n        )\n    }\n\n    handleFormSubmit(e) {\n        e.preventDefault();\n\n        this.Auth.login(this.state.username, this.state.password)\n            .then(res => {\n                this.props.history.replace('/story');\n            })\n            .catch(err => {\n                alert(err);\n            })\n    }\n}\n\nexport default Login;","import React, {Component} from 'react';\nimport './global.css';\nimport './App.css';\nimport Dash from './dashboard/Dash';\nimport Login from './login/Login.js';\n\n\n// function onAuthRequired({history}) {\n//     history.push('/login');\n// }\n\nclass DashApp extends Component {\n\n    state = {\n        loggedIn: true\n    };\n\n    verifyLogin = () => {\n        this.setState({\n            loggedIn: true\n        })\n    };\n\n    render() {\n        let path = window.location.hash;\n        console.log(path);\n\n        if (!this.state.loggedIn) {\n            return (\n                <div className=\"App\">\n                    <Login onSubmit={this.verifyLogin}/>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"App\">\n                    <Dash/>\n                </div>\n            );\n        }\n\n    }\n}\n\nexport default DashApp;\n","import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport StatusView from './views/status.view';\nimport ManualCrawl from './views/manualCrawl.view';\n// import Nav from './nav/nav-drawer';\nimport FacilityAutoComplete from './views/facilityAutoComplete';\nimport DashApp from './dash/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/css/material-dashboard.css';\nimport './assets/css/material-dashboard.css';\nimport './index.css';\n\n\nclass App extends Component {\n\n    state = {\n        SelectedFacilities: localStorage.getItem(\"selectedFacilities\") != null ?\n            localStorage.getItem(\"selectedFacilities\") : [],\n    };\n\n    // Updates the selected facility list\n    selectedUpdate = (val) => {\n        this.setState({\n            SelectedFacilities: val\n        });\n        console.log(val);\n    };\n\n    baseUrl = process.env.PUBLIC_URL;\n\n    render() {\n        // remove unnecessary search bar from manual crawl page\n        if (window.location.hash == \"#/manual_crawl\") {\n            return (\n                <div className=\"App\">\n                    <header className=\"App-header\" style={{height: '70px !important'}}>\n                        <h1 className=\"App-title\">\n                            <Link to=\"/\">\n                                Acadia Monitoring\n                            </Link>\n                        </h1>\n                    </header>\n                    <Route path='/manual_crawl' render={() => <ManualCrawl/>}/>\n                </div>\n            );\n        } else if (window.location.hash == \"#/\") {\n            return (\n                <div className=\"App\">\n                    <header className=\"App-header\" style={{height: '70px !important'}}>\n                        <h1 className=\"App-title\">\n                            <Link to=\"/\">\n                                Acadia Monitoring\n                            </Link>\n                        </h1>\n                    </header>\n                    <FacilityAutoComplete onUpdate={this.selectedUpdate}/>\n\n                    <Route exact path='/' render={() => <StatusView selected={this.state.SelectedFacilities}/>}/>\n\n                    {(window.location.hash !== \"#/\") ? (\n                        <div style={{padding: \"30px\"}}>\n                            You're off the path...\n                            <Link to=\"/\">\n                                Go Back Home\n                            </Link>\n                        </div>\n                    ) : (<span></span>)\n                    }\n\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"App\">\n                    <DashApp/>\n                </div>\n            );\n        }\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/yak-logo-fullbody.a6e0e09b.svg\";"],"sourceRoot":""}